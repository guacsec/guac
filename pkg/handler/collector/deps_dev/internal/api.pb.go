// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: pkg/handler/collector/deps.dev/internal/api.proto

package deps_dev

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// System identifies a packaging system.
type System int32

const (
	System_SYSTEM_UNSPECIFIED System = 0
	System_SYSTEM_GO          System = 1
	System_SYSTEM_NPM         System = 3
	System_SYSTEM_CARGO       System = 4
	System_SYSTEM_MAVEN       System = 6
	System_SYSTEM_PYPI        System = 7
)

// Enum value maps for System.
var (
	System_name = map[int32]string{
		0: "SYSTEM_UNSPECIFIED",
		1: "SYSTEM_GO",
		3: "SYSTEM_NPM",
		4: "SYSTEM_CARGO",
		6: "SYSTEM_MAVEN",
		7: "SYSTEM_PYPI",
	}
	System_value = map[string]int32{
		"SYSTEM_UNSPECIFIED": 0,
		"SYSTEM_GO":          1,
		"SYSTEM_NPM":         3,
		"SYSTEM_CARGO":       4,
		"SYSTEM_MAVEN":       6,
		"SYSTEM_PYPI":        7,
	}
)

func (x System) Enum() *System {
	p := new(System)
	*p = x
	return p
}

func (x System) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (System) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[0].Descriptor()
}

func (System) Type() protoreflect.EnumType {
	return &file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[0]
}

func (x System) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use System.Descriptor instead.
func (System) EnumDescriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{0}
}

// AdvisorySource identifies a security advisory source.
type AdvisorySource int32

const (
	AdvisorySource_ADVISORY_SOURCE_UNSPECIFIED AdvisorySource = 0
	AdvisorySource_ADVISORY_SOURCE_NSWG        AdvisorySource = 2
	AdvisorySource_ADVISORY_SOURCE_GHSA        AdvisorySource = 5
	AdvisorySource_ADVISORY_SOURCE_OSV         AdvisorySource = 6
)

// Enum value maps for AdvisorySource.
var (
	AdvisorySource_name = map[int32]string{
		0: "ADVISORY_SOURCE_UNSPECIFIED",
		2: "ADVISORY_SOURCE_NSWG",
		5: "ADVISORY_SOURCE_GHSA",
		6: "ADVISORY_SOURCE_OSV",
	}
	AdvisorySource_value = map[string]int32{
		"ADVISORY_SOURCE_UNSPECIFIED": 0,
		"ADVISORY_SOURCE_NSWG":        2,
		"ADVISORY_SOURCE_GHSA":        5,
		"ADVISORY_SOURCE_OSV":         6,
	}
)

func (x AdvisorySource) Enum() *AdvisorySource {
	p := new(AdvisorySource)
	*p = x
	return p
}

func (x AdvisorySource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdvisorySource) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[1].Descriptor()
}

func (AdvisorySource) Type() protoreflect.EnumType {
	return &file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[1]
}

func (x AdvisorySource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdvisorySource.Descriptor instead.
func (AdvisorySource) EnumDescriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{1}
}

// DataType identifies auxiliary data that can be attached to the response.
type DataType int32

const (
	DataType_DATA_TYPE_UNSPECIFIED DataType = 0
	DataType_DATA_TYPE_LICENSING   DataType = 1
	DataType_DATA_TYPE_SECURITY    DataType = 2
	DataType_DATA_TYPE_LINKS       DataType = 3
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "DATA_TYPE_UNSPECIFIED",
		1: "DATA_TYPE_LICENSING",
		2: "DATA_TYPE_SECURITY",
		3: "DATA_TYPE_LINKS",
	}
	DataType_value = map[string]int32{
		"DATA_TYPE_UNSPECIFIED": 0,
		"DATA_TYPE_LICENSING":   1,
		"DATA_TYPE_SECURITY":    2,
		"DATA_TYPE_LINKS":       3,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[2].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[2]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{2}
}

// Digest holds known hash digests for a package version.
type Digest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sha512 []byte `protobuf:"bytes,1,opt,name=sha512,proto3" json:"sha512,omitempty"`
	Sha256 []byte `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Sha1   []byte `protobuf:"bytes,3,opt,name=sha1,proto3" json:"sha1,omitempty"`
	Md5    []byte `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *Digest) Reset() {
	*x = Digest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Digest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Digest) ProtoMessage() {}

func (x *Digest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Digest.ProtoReflect.Descriptor instead.
func (*Digest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{0}
}

func (x *Digest) GetSha512() []byte {
	if x != nil {
		return x.Sha512
	}
	return nil
}

func (x *Digest) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

func (x *Digest) GetSha1() []byte {
	if x != nil {
		return x.Sha1
	}
	return nil
}

func (x *Digest) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

// PackageKey identifies a package.
type PackageKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System System `protobuf:"varint,1,opt,name=system,proto3,enum=deps_dev.v2alpha.System" json:"system,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PackageKey) Reset() {
	*x = PackageKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageKey) ProtoMessage() {}

func (x *PackageKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageKey.ProtoReflect.Descriptor instead.
func (*PackageKey) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{1}
}

func (x *PackageKey) GetSystem() System {
	if x != nil {
		return x.System
	}
	return System_SYSTEM_UNSPECIFIED
}

func (x *PackageKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PackagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System System `protobuf:"varint,1,opt,name=system,proto3,enum=deps_dev.v2alpha.System" json:"system,omitempty"` // Optional; if set, only return packages in this system
}

func (x *PackagesRequest) Reset() {
	*x = PackagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackagesRequest) ProtoMessage() {}

func (x *PackagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackagesRequest.ProtoReflect.Descriptor instead.
func (*PackagesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{2}
}

func (x *PackagesRequest) GetSystem() System {
	if x != nil {
		return x.System
	}
	return System_SYSTEM_UNSPECIFIED
}

type PackagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages []*PackageKey `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
}

func (x *PackagesResponse) Reset() {
	*x = PackagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackagesResponse) ProtoMessage() {}

func (x *PackagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackagesResponse.ProtoReflect.Descriptor instead.
func (*PackagesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{3}
}

func (x *PackagesResponse) GetPackages() []*PackageKey {
	if x != nil {
		return x.Packages
	}
	return nil
}

// VersionKey identifies a package version.
type VersionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System  System `protobuf:"varint,1,opt,name=system,proto3,enum=deps_dev.v2alpha.System" json:"system,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionKey) Reset() {
	*x = VersionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionKey) ProtoMessage() {}

func (x *VersionKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionKey.ProtoReflect.Descriptor instead.
func (*VersionKey) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{4}
}

func (x *VersionKey) GetSystem() System {
	if x != nil {
		return x.System
	}
	return System_SYSTEM_UNSPECIFIED
}

func (x *VersionKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VersionKey) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// AdvisoryKey identifies a security advisory.
type AdvisoryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source AdvisorySource `protobuf:"varint,1,opt,name=source,proto3,enum=deps_dev.v2alpha.AdvisorySource" json:"source,omitempty"`
	Id     string         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvisoryKey) Reset() {
	*x = AdvisoryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvisoryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvisoryKey) ProtoMessage() {}

func (x *AdvisoryKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvisoryKey.ProtoReflect.Descriptor instead.
func (*AdvisoryKey) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{5}
}

func (x *AdvisoryKey) GetSource() AdvisorySource {
	if x != nil {
		return x.Source
	}
	return AdvisorySource_ADVISORY_SOURCE_UNSPECIFIED
}

func (x *AdvisoryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageKey *PackageKey `protobuf:"bytes,1,opt,name=package_key,json=packageKey,proto3" json:"package_key,omitempty"`
}

func (x *VersionsRequest) Reset() {
	*x = VersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionsRequest) ProtoMessage() {}

func (x *VersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionsRequest.ProtoReflect.Descriptor instead.
func (*VersionsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{6}
}

func (x *VersionsRequest) GetPackageKey() *PackageKey {
	if x != nil {
		return x.PackageKey
	}
	return nil
}

type VersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*VersionsResponse_Version `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *VersionsResponse) Reset() {
	*x = VersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionsResponse) ProtoMessage() {}

func (x *VersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionsResponse.ProtoReflect.Descriptor instead.
func (*VersionsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{7}
}

func (x *VersionsResponse) GetVersions() []*VersionsResponse_Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

type VersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// At least one of these fields must be set.
	// Both fields may be set to narrow the results.
	VersionKey  *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	VersionHash *Digest     `protobuf:"bytes,2,opt,name=version_hash,json=versionHash,proto3" json:"version_hash,omitempty"`
	// Specify auxiliary data to be returned with the response.
	// Multiple auxiliary data types may be requested.
	// Setting this field may slow the response.
	ExtraDataTypes []DataType `protobuf:"varint,4,rep,packed,name=extra_data_types,json=extraDataTypes,proto3,enum=deps_dev.v2alpha.DataType" json:"extra_data_types,omitempty"`
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{8}
}

func (x *VersionRequest) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *VersionRequest) GetVersionHash() *Digest {
	if x != nil {
		return x.VersionHash
	}
	return nil
}

func (x *VersionRequest) GetExtraDataTypes() []DataType {
	if x != nil {
		return x.ExtraDataTypes
	}
	return nil
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// May differ from the version key in the request, if set, due to
	// canonicalization.
	VersionKey   *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	UpstreamUrls []string    `protobuf:"bytes,2,rep,name=upstream_urls,json=upstreamUrls,proto3" json:"upstream_urls,omitempty"`
	// These fields will be populated only if extra_data_types was set in the
	// request.
	Licenses     []string       `protobuf:"bytes,3,rep,name=licenses,proto3" json:"licenses,omitempty"`
	AdvisoryKeys []*AdvisoryKey `protobuf:"bytes,4,rep,name=advisory_keys,json=advisoryKeys,proto3" json:"advisory_keys,omitempty"`
	Links        []*Link        `protobuf:"bytes,5,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{9}
}

func (x *VersionResponse) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *VersionResponse) GetUpstreamUrls() []string {
	if x != nil {
		return x.UpstreamUrls
	}
	return nil
}

func (x *VersionResponse) GetLicenses() []string {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *VersionResponse) GetAdvisoryKeys() []*AdvisoryKey {
	if x != nil {
		return x.AdvisoryKeys
	}
	return nil
}

func (x *VersionResponse) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type DependenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// At least one of these fields must be set.
	// Both fields may be set to narrow the results.
	VersionKey  *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	VersionHash *Digest     `protobuf:"bytes,2,opt,name=version_hash,json=versionHash,proto3" json:"version_hash,omitempty"`
	// Specify auxiliary data to be returned with the response.
	// Multiple auxiliary data types may be requested.
	// Setting this field may slow the response.
	ExtraDataTypes []DataType `protobuf:"varint,4,rep,packed,name=extra_data_types,json=extraDataTypes,proto3,enum=deps_dev.v2alpha.DataType" json:"extra_data_types,omitempty"`
}

func (x *DependenciesRequest) Reset() {
	*x = DependenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependenciesRequest) ProtoMessage() {}

func (x *DependenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependenciesRequest.ProtoReflect.Descriptor instead.
func (*DependenciesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{10}
}

func (x *DependenciesRequest) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *DependenciesRequest) GetVersionHash() *Digest {
	if x != nil {
		return x.VersionHash
	}
	return nil
}

func (x *DependenciesRequest) GetExtraDataTypes() []DataType {
	if x != nil {
		return x.ExtraDataTypes
	}
	return nil
}

type DependenciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*DependenciesResponse_Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges []*DependenciesResponse_Edge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	// Any error associated with the dependency graph that is not specific to a
	// node. This may be sent in any response message; there will be at most one
	// of this error. An error here may imply the graph as a whole is incorrect.
	// The error message has no defined format and is intended for human
	// consumption.
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DependenciesResponse) Reset() {
	*x = DependenciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependenciesResponse) ProtoMessage() {}

func (x *DependenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependenciesResponse.ProtoReflect.Descriptor instead.
func (*DependenciesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{11}
}

func (x *DependenciesResponse) GetNodes() []*DependenciesResponse_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *DependenciesResponse) GetEdges() []*DependenciesResponse_Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *DependenciesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{12}
}

func (x *Link) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type DependentInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// At least one of these fields must be set.
	// Both fields may be set to narrow the results.
	VersionKey  *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	VersionHash *Digest     `protobuf:"bytes,2,opt,name=version_hash,json=versionHash,proto3" json:"version_hash,omitempty"`
	// Whether to include a sample of the dependents.
	IncludeSamples bool `protobuf:"varint,4,opt,name=include_samples,json=includeSamples,proto3" json:"include_samples,omitempty"`
}

func (x *DependentInfoRequest) Reset() {
	*x = DependentInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependentInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependentInfoRequest) ProtoMessage() {}

func (x *DependentInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependentInfoRequest.ProtoReflect.Descriptor instead.
func (*DependentInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{13}
}

func (x *DependentInfoRequest) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *DependentInfoRequest) GetVersionHash() *Digest {
	if x != nil {
		return x.VersionHash
	}
	return nil
}

func (x *DependentInfoRequest) GetIncludeSamples() bool {
	if x != nil {
		return x.IncludeSamples
	}
	return false
}

type DependentInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// May differ from the version key in the request, if set, due to
	// canonicalization.
	VersionKey *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	// The number of packages that directly import the requested package version.
	DirectCount uint32 `protobuf:"varint,2,opt,name=direct_count,json=directCount,proto3" json:"direct_count,omitempty"`
	// The number of packages that depend on the requested package version
	// without directly importing it themselves.
	IndirectCount uint32 `protobuf:"varint,3,opt,name=indirect_count,json=indirectCount,proto3" json:"indirect_count,omitempty"`
	// The total number of distinct packages that depend on the requested package
	// version. It may be less than direct_count + indirect_count because in some
	// systems the same package may appear several times at different depths in a
	// dependency graph.
	TotalCount               uint32                             `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	DirectDependentSamples   []*DependentInfoResponse_Dependent `protobuf:"bytes,5,rep,name=direct_dependent_samples,json=directDependentSamples,proto3" json:"direct_dependent_samples,omitempty"`
	IndirectDependentSamples []*DependentInfoResponse_Dependent `protobuf:"bytes,6,rep,name=indirect_dependent_samples,json=indirectDependentSamples,proto3" json:"indirect_dependent_samples,omitempty"`
}

func (x *DependentInfoResponse) Reset() {
	*x = DependentInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependentInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependentInfoResponse) ProtoMessage() {}

func (x *DependentInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependentInfoResponse.ProtoReflect.Descriptor instead.
func (*DependentInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{14}
}

func (x *DependentInfoResponse) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *DependentInfoResponse) GetDirectCount() uint32 {
	if x != nil {
		return x.DirectCount
	}
	return 0
}

func (x *DependentInfoResponse) GetIndirectCount() uint32 {
	if x != nil {
		return x.IndirectCount
	}
	return 0
}

func (x *DependentInfoResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *DependentInfoResponse) GetDirectDependentSamples() []*DependentInfoResponse_Dependent {
	if x != nil {
		return x.DirectDependentSamples
	}
	return nil
}

func (x *DependentInfoResponse) GetIndirectDependentSamples() []*DependentInfoResponse_Dependent {
	if x != nil {
		return x.IndirectDependentSamples
	}
	return nil
}

type AdvisoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvisoryKey *AdvisoryKey `protobuf:"bytes,1,opt,name=advisory_key,json=advisoryKey,proto3" json:"advisory_key,omitempty"`
}

func (x *AdvisoryRequest) Reset() {
	*x = AdvisoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvisoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvisoryRequest) ProtoMessage() {}

func (x *AdvisoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvisoryRequest.ProtoReflect.Descriptor instead.
func (*AdvisoryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{15}
}

func (x *AdvisoryRequest) GetAdvisoryKey() *AdvisoryKey {
	if x != nil {
		return x.AdvisoryKey
	}
	return nil
}

type AdvisoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvisoryKey *AdvisoryKey `protobuf:"bytes,1,opt,name=advisory_key,json=advisoryKey,proto3" json:"advisory_key,omitempty"`
	Url         string       `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// Brief human-readable description.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// Other identifiers used for this advisory, including CVEs.
	Aliases []string `protobuf:"bytes,4,rep,name=aliases,proto3" json:"aliases,omitempty"`
	// The severity of this advisory, as measured on the CVSS v3 scale of [0,10].
	Cvss3Score float32 `protobuf:"fixed32,5,opt,name=cvss3_score,json=cvss3Score,proto3" json:"cvss3_score,omitempty"`
	// The severity of this advisory as represented by a CVSS vector string. The
	// score can be derived from this field if it is set.
	Cvss3Vector string `protobuf:"bytes,6,opt,name=cvss3_vector,json=cvss3Vector,proto3" json:"cvss3_vector,omitempty"`
}

func (x *AdvisoryResponse) Reset() {
	*x = AdvisoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvisoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvisoryResponse) ProtoMessage() {}

func (x *AdvisoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvisoryResponse.ProtoReflect.Descriptor instead.
func (*AdvisoryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{16}
}

func (x *AdvisoryResponse) GetAdvisoryKey() *AdvisoryKey {
	if x != nil {
		return x.AdvisoryKey
	}
	return nil
}

func (x *AdvisoryResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdvisoryResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdvisoryResponse) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *AdvisoryResponse) GetCvss3Score() float32 {
	if x != nil {
		return x.Cvss3Score
	}
	return 0
}

func (x *AdvisoryResponse) GetCvss3Vector() string {
	if x != nil {
		return x.Cvss3Vector
	}
	return ""
}

type ProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ProjectRequest) Reset() {
	*x = ProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRequest) ProtoMessage() {}

func (x *ProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRequest.ProtoReflect.Descriptor instead.
func (*ProjectRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{17}
}

func (x *ProjectRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenIssuesCount int64                      `protobuf:"varint,3,opt,name=open_issues_count,json=openIssuesCount,proto3" json:"open_issues_count,omitempty"`
	StarsCount      int64                      `protobuf:"varint,4,opt,name=stars_count,json=starsCount,proto3" json:"stars_count,omitempty"`
	ForksCount      int64                      `protobuf:"varint,5,opt,name=forks_count,json=forksCount,proto3" json:"forks_count,omitempty"`
	License         string                     `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty"`
	Description     string                     `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Homepage        string                     `protobuf:"bytes,8,opt,name=homepage,proto3" json:"homepage,omitempty"`
	Scorecard       *ProjectResponse_Scorecard `protobuf:"bytes,1,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
}

func (x *ProjectResponse) Reset() {
	*x = ProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResponse) ProtoMessage() {}

func (x *ProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResponse.ProtoReflect.Descriptor instead.
func (*ProjectResponse) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{18}
}

func (x *ProjectResponse) GetOpenIssuesCount() int64 {
	if x != nil {
		return x.OpenIssuesCount
	}
	return 0
}

func (x *ProjectResponse) GetStarsCount() int64 {
	if x != nil {
		return x.StarsCount
	}
	return 0
}

func (x *ProjectResponse) GetForksCount() int64 {
	if x != nil {
		return x.ForksCount
	}
	return 0
}

func (x *ProjectResponse) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *ProjectResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectResponse) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *ProjectResponse) GetScorecard() *ProjectResponse_Scorecard {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

type ProjectPackageVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ProjectPackageVersionsRequest) Reset() {
	*x = ProjectPackageVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectPackageVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectPackageVersionsRequest) ProtoMessage() {}

func (x *ProjectPackageVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectPackageVersionsRequest.ProtoReflect.Descriptor instead.
func (*ProjectPackageVersionsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{19}
}

func (x *ProjectPackageVersionsRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ProjectPackageVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionKeys []*VersionKey `protobuf:"bytes,1,rep,name=version_keys,json=versionKeys,proto3" json:"version_keys,omitempty"`
}

func (x *ProjectPackageVersionsResponse) Reset() {
	*x = ProjectPackageVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectPackageVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectPackageVersionsResponse) ProtoMessage() {}

func (x *ProjectPackageVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectPackageVersionsResponse.ProtoReflect.Descriptor instead.
func (*ProjectPackageVersionsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{20}
}

func (x *ProjectPackageVersionsResponse) GetVersionKeys() []*VersionKey {
	if x != nil {
		return x.VersionKeys
	}
	return nil
}

type VersionsResponse_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionKey   *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	IsDefault    bool        `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	UpstreamUrls []string    `protobuf:"bytes,3,rep,name=upstream_urls,json=upstreamUrls,proto3" json:"upstream_urls,omitempty"`
}

func (x *VersionsResponse_Version) Reset() {
	*x = VersionsResponse_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionsResponse_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionsResponse_Version) ProtoMessage() {}

func (x *VersionsResponse_Version) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionsResponse_Version.ProtoReflect.Descriptor instead.
func (*VersionsResponse_Version) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{7, 0}
}

func (x *VersionsResponse_Version) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *VersionsResponse_Version) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *VersionsResponse_Version) GetUpstreamUrls() []string {
	if x != nil {
		return x.UpstreamUrls
	}
	return nil
}

type DependenciesResponse_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionKey   *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	UpstreamUrls []string    `protobuf:"bytes,2,rep,name=upstream_urls,json=upstreamUrls,proto3" json:"upstream_urls,omitempty"`
	// These fields will be populated only if extra_data_types was set in the
	// request.
	Licenses     []string       `protobuf:"bytes,3,rep,name=licenses,proto3" json:"licenses,omitempty"`
	AdvisoryKeys []*AdvisoryKey `protobuf:"bytes,4,rep,name=advisory_keys,json=advisoryKeys,proto3" json:"advisory_keys,omitempty"`
	Links        []*Link        `protobuf:"bytes,5,rep,name=links,proto3" json:"links,omitempty"`
	// Errors associated with this node of the graph, such as an unknown
	// dependency or unmet dependency requirement. An error here may imply the
	// graph as a whole is incorrect. The error message has no defined format
	// and is intended for human consumption.
	Errors []string `protobuf:"bytes,6,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *DependenciesResponse_Node) Reset() {
	*x = DependenciesResponse_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependenciesResponse_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependenciesResponse_Node) ProtoMessage() {}

func (x *DependenciesResponse_Node) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependenciesResponse_Node.ProtoReflect.Descriptor instead.
func (*DependenciesResponse_Node) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{11, 0}
}

func (x *DependenciesResponse_Node) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *DependenciesResponse_Node) GetUpstreamUrls() []string {
	if x != nil {
		return x.UpstreamUrls
	}
	return nil
}

func (x *DependenciesResponse_Node) GetLicenses() []string {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *DependenciesResponse_Node) GetAdvisoryKeys() []*AdvisoryKey {
	if x != nil {
		return x.AdvisoryKeys
	}
	return nil
}

func (x *DependenciesResponse_Node) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *DependenciesResponse_Node) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type DependenciesResponse_Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromNode    uint32 `protobuf:"varint,1,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	ToNode      uint32 `protobuf:"varint,2,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
	Requirement string `protobuf:"bytes,3,opt,name=requirement,proto3" json:"requirement,omitempty"`
}

func (x *DependenciesResponse_Edge) Reset() {
	*x = DependenciesResponse_Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependenciesResponse_Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependenciesResponse_Edge) ProtoMessage() {}

func (x *DependenciesResponse_Edge) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependenciesResponse_Edge.ProtoReflect.Descriptor instead.
func (*DependenciesResponse_Edge) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{11, 1}
}

func (x *DependenciesResponse_Edge) GetFromNode() uint32 {
	if x != nil {
		return x.FromNode
	}
	return 0
}

func (x *DependenciesResponse_Edge) GetToNode() uint32 {
	if x != nil {
		return x.ToNode
	}
	return 0
}

func (x *DependenciesResponse_Edge) GetRequirement() string {
	if x != nil {
		return x.Requirement
	}
	return ""
}

// These samples contain versions of packages which depend on the requested
// package version. The distinction between direct and indirect dependents is
// the same as for the counts. These fields are only populated if
// include_samples was true in the request.
type DependentInfoResponse_Dependent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionKey *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
}

func (x *DependentInfoResponse_Dependent) Reset() {
	*x = DependentInfoResponse_Dependent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependentInfoResponse_Dependent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependentInfoResponse_Dependent) ProtoMessage() {}

func (x *DependentInfoResponse_Dependent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependentInfoResponse_Dependent.ProtoReflect.Descriptor instead.
func (*DependentInfoResponse_Dependent) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{14, 0}
}

func (x *DependentInfoResponse_Dependent) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

// The Open Source Security Foundation security scorecard.
// (https://github.com/ossf/scorecard).
type ProjectResponse_Scorecard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Seconds since Unix epoch.
	Date       int64                                       `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Repository *ProjectResponse_Scorecard_Repository       `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	Scorecard  *ProjectResponse_Scorecard_ScorecardDetails `protobuf:"bytes,3,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
	Checks     []*ProjectResponse_Scorecard_Check          `protobuf:"bytes,4,rep,name=checks,proto3" json:"checks,omitempty"`
	// A weighted average score between 0-10 for the entire repository.
	OverallScore float32 `protobuf:"fixed32,5,opt,name=overall_score,json=overallScore,proto3" json:"overall_score,omitempty"`
	// Additional metadata associated with the scorecard.
	Metadata []string `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ProjectResponse_Scorecard) Reset() {
	*x = ProjectResponse_Scorecard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectResponse_Scorecard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResponse_Scorecard) ProtoMessage() {}

func (x *ProjectResponse_Scorecard) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResponse_Scorecard.ProtoReflect.Descriptor instead.
func (*ProjectResponse_Scorecard) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{18, 0}
}

func (x *ProjectResponse_Scorecard) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *ProjectResponse_Scorecard) GetRepository() *ProjectResponse_Scorecard_Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *ProjectResponse_Scorecard) GetScorecard() *ProjectResponse_Scorecard_ScorecardDetails {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

func (x *ProjectResponse_Scorecard) GetChecks() []*ProjectResponse_Scorecard_Check {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *ProjectResponse_Scorecard) GetOverallScore() float32 {
	if x != nil {
		return x.OverallScore
	}
	return 0
}

func (x *ProjectResponse_Scorecard) GetMetadata() []string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ProjectResponse_Scorecard_Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the repository.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The repository commit scorecards was run against.
	Commit string `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *ProjectResponse_Scorecard_Repository) Reset() {
	*x = ProjectResponse_Scorecard_Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectResponse_Scorecard_Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResponse_Scorecard_Repository) ProtoMessage() {}

func (x *ProjectResponse_Scorecard_Repository) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResponse_Scorecard_Repository.ProtoReflect.Descriptor instead.
func (*ProjectResponse_Scorecard_Repository) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{18, 0, 0}
}

func (x *ProjectResponse_Scorecard_Repository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectResponse_Scorecard_Repository) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

type ProjectResponse_Scorecard_ScorecardDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The version of the scorecards program run.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// The commit of the scorecards program run.
	Commit string `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *ProjectResponse_Scorecard_ScorecardDetails) Reset() {
	*x = ProjectResponse_Scorecard_ScorecardDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectResponse_Scorecard_ScorecardDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResponse_Scorecard_ScorecardDetails) ProtoMessage() {}

func (x *ProjectResponse_Scorecard_ScorecardDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResponse_Scorecard_ScorecardDetails.ProtoReflect.Descriptor instead.
func (*ProjectResponse_Scorecard_ScorecardDetails) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{18, 0, 1}
}

func (x *ProjectResponse_Scorecard_ScorecardDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ProjectResponse_Scorecard_ScorecardDetails) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

type ProjectResponse_Scorecard_Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Documentation *ProjectResponse_Scorecard_Check_Documentation `protobuf:"bytes,2,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// Between 0-10. A negative score indicates that the
	// check was unable to be run successfully.
	Score   int64    `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Reason  string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Details []string `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ProjectResponse_Scorecard_Check) Reset() {
	*x = ProjectResponse_Scorecard_Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectResponse_Scorecard_Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResponse_Scorecard_Check) ProtoMessage() {}

func (x *ProjectResponse_Scorecard_Check) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResponse_Scorecard_Check.ProtoReflect.Descriptor instead.
func (*ProjectResponse_Scorecard_Check) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{18, 0, 2}
}

func (x *ProjectResponse_Scorecard_Check) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectResponse_Scorecard_Check) GetDocumentation() *ProjectResponse_Scorecard_Check_Documentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *ProjectResponse_Scorecard_Check) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProjectResponse_Scorecard_Check) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ProjectResponse_Scorecard_Check) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

type ProjectResponse_Scorecard_Check_Documentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A short description of the check.
	ShortDescription string `protobuf:"bytes,1,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	// A link to more details about the check.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ProjectResponse_Scorecard_Check_Documentation) Reset() {
	*x = ProjectResponse_Scorecard_Check_Documentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectResponse_Scorecard_Check_Documentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResponse_Scorecard_Check_Documentation) ProtoMessage() {}

func (x *ProjectResponse_Scorecard_Check_Documentation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResponse_Scorecard_Check_Documentation.ProtoReflect.Descriptor instead.
func (*ProjectResponse_Scorecard_Check_Documentation) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{18, 0, 2, 0}
}

func (x *ProjectResponse_Scorecard_Check_Documentation) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *ProjectResponse_Scorecard_Check_Documentation) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_pkg_handler_collector_deps_dev_internal_api_proto protoreflect.FileDescriptor

var file_pkg_handler_collector_deps_dev_internal_api_proto_rawDesc = []byte{
	0x0a, 0x31, 0x70, 0x6b, 0x67, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x65, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x5e, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x68, 0x61, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73,
	0x68, 0x61, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x52, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76,
	0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64,
	0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x4c,
	0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e,
	0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x0a,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70,
	0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x0b, 0x41, 0x64,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x76,
	0x69, 0x73, 0x6f, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65,
	0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xe9, 0x01, 0x0a, 0x10,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x8c, 0x01, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x75,
	0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x44, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x4a, 0x04, 0x08, 0x03,
	0x10, 0x04, 0x22, 0x83, 0x02, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65,
	0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x61, 0x64,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76,
	0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12,
	0x3b, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76,
	0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x44, 0x0a, 0x10,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65,
	0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0xa5, 0x04, 0x0a, 0x14, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76,
	0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x90, 0x02,
	0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65,
	0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x61, 0x64,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x1a, 0x5e, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x2e, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0xc1, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x4a, 0x04,
	0x08, 0x03, 0x10, 0x04, 0x22, 0xf1, 0x03, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76,
	0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x6e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x18, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x65, 0x70,
	0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x16, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x1a, 0x69, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x18, 0x69, 0x6e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x09, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f,
	0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x53, 0x0a, 0x0f, 0x41, 0x64, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x61,
	0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x52, 0x0b, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0xda, 0x01,
	0x0a, 0x10, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f,
	0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x0b, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72,
	0x79, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x76, 0x73, 0x73, 0x33, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x76, 0x73,
	0x73, 0x33, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x76, 0x73, 0x73, 0x33,
	0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x76, 0x73, 0x73, 0x33, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x22, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xa7,
	0x08, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f,
	0x70, 0x65, 0x6e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x65,
	0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x72, 0x64, 0x1a, 0xfc, 0x05, 0x0a, 0x09, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x5a, 0x0a,
	0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x09,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x06, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x1a,
	0x44, 0x0a, 0x10, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x1a, 0x9a, 0x02, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x64, 0x65, 0x70,
	0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x1a, 0x4e, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x31, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x61, 0x0a, 0x1e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76,
	0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x2a, 0x74,
	0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x47, 0x4f, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x50, 0x4d, 0x10, 0x03, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x43, 0x41, 0x52, 0x47, 0x4f, 0x10,
	0x04, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4d, 0x41, 0x56, 0x45,
	0x4e, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x50, 0x59,
	0x50, 0x49, 0x10, 0x07, 0x2a, 0x7e, 0x0a, 0x0e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x44, 0x56, 0x49, 0x53, 0x4f,
	0x52, 0x59, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x44, 0x56, 0x49, 0x53,
	0x4f, 0x52, 0x59, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x53, 0x57, 0x47, 0x10,
	0x02, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x44, 0x56, 0x49, 0x53, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x47, 0x48, 0x53, 0x41, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x41,
	0x44, 0x56, 0x49, 0x53, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4f,
	0x53, 0x56, 0x10, 0x06, 0x2a, 0x6b, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x15, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x53, 0x10,
	0x03, 0x32, 0xfb, 0x05, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x55,
	0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x64, 0x65, 0x70,
	0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x55, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x21, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e,
	0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64,
	0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x61, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x25, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64,
	0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x62, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e,
	0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64,
	0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x08, 0x41, 0x64, 0x76, 0x69, 0x73,
	0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76,
	0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65,
	0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64,
	0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f,
	0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f,
	0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42,
	0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x75,
	0x61, 0x63, 0x73, 0x65, 0x63, 0x2f, 0x67, 0x75, 0x61, 0x63, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2f, 0x64, 0x65, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescOnce sync.Once
	file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescData = file_pkg_handler_collector_deps_dev_internal_api_proto_rawDesc
)

func file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP() []byte {
	file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescOnce.Do(func() {
		file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescData)
	})
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescData
}

var file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_pkg_handler_collector_deps_dev_internal_api_proto_goTypes = []interface{}{
	(System)(0),                                           // 0: deps_dev.v2alpha.System
	(AdvisorySource)(0),                                   // 1: deps_dev.v2alpha.AdvisorySource
	(DataType)(0),                                         // 2: deps_dev.v2alpha.DataType
	(*Digest)(nil),                                        // 3: deps_dev.v2alpha.Digest
	(*PackageKey)(nil),                                    // 4: deps_dev.v2alpha.PackageKey
	(*PackagesRequest)(nil),                               // 5: deps_dev.v2alpha.PackagesRequest
	(*PackagesResponse)(nil),                              // 6: deps_dev.v2alpha.PackagesResponse
	(*VersionKey)(nil),                                    // 7: deps_dev.v2alpha.VersionKey
	(*AdvisoryKey)(nil),                                   // 8: deps_dev.v2alpha.AdvisoryKey
	(*VersionsRequest)(nil),                               // 9: deps_dev.v2alpha.VersionsRequest
	(*VersionsResponse)(nil),                              // 10: deps_dev.v2alpha.VersionsResponse
	(*VersionRequest)(nil),                                // 11: deps_dev.v2alpha.VersionRequest
	(*VersionResponse)(nil),                               // 12: deps_dev.v2alpha.VersionResponse
	(*DependenciesRequest)(nil),                           // 13: deps_dev.v2alpha.DependenciesRequest
	(*DependenciesResponse)(nil),                          // 14: deps_dev.v2alpha.DependenciesResponse
	(*Link)(nil),                                          // 15: deps_dev.v2alpha.Link
	(*DependentInfoRequest)(nil),                          // 16: deps_dev.v2alpha.DependentInfoRequest
	(*DependentInfoResponse)(nil),                         // 17: deps_dev.v2alpha.DependentInfoResponse
	(*AdvisoryRequest)(nil),                               // 18: deps_dev.v2alpha.AdvisoryRequest
	(*AdvisoryResponse)(nil),                              // 19: deps_dev.v2alpha.AdvisoryResponse
	(*ProjectRequest)(nil),                                // 20: deps_dev.v2alpha.ProjectRequest
	(*ProjectResponse)(nil),                               // 21: deps_dev.v2alpha.ProjectResponse
	(*ProjectPackageVersionsRequest)(nil),                 // 22: deps_dev.v2alpha.ProjectPackageVersionsRequest
	(*ProjectPackageVersionsResponse)(nil),                // 23: deps_dev.v2alpha.ProjectPackageVersionsResponse
	(*VersionsResponse_Version)(nil),                      // 24: deps_dev.v2alpha.VersionsResponse.Version
	(*DependenciesResponse_Node)(nil),                     // 25: deps_dev.v2alpha.DependenciesResponse.Node
	(*DependenciesResponse_Edge)(nil),                     // 26: deps_dev.v2alpha.DependenciesResponse.Edge
	(*DependentInfoResponse_Dependent)(nil),               // 27: deps_dev.v2alpha.DependentInfoResponse.Dependent
	(*ProjectResponse_Scorecard)(nil),                     // 28: deps_dev.v2alpha.ProjectResponse.Scorecard
	(*ProjectResponse_Scorecard_Repository)(nil),          // 29: deps_dev.v2alpha.ProjectResponse.Scorecard.Repository
	(*ProjectResponse_Scorecard_ScorecardDetails)(nil),    // 30: deps_dev.v2alpha.ProjectResponse.Scorecard.ScorecardDetails
	(*ProjectResponse_Scorecard_Check)(nil),               // 31: deps_dev.v2alpha.ProjectResponse.Scorecard.Check
	(*ProjectResponse_Scorecard_Check_Documentation)(nil), // 32: deps_dev.v2alpha.ProjectResponse.Scorecard.Check.Documentation
}
var file_pkg_handler_collector_deps_dev_internal_api_proto_depIdxs = []int32{
	0,  // 0: deps_dev.v2alpha.PackageKey.system:type_name -> deps_dev.v2alpha.System
	0,  // 1: deps_dev.v2alpha.PackagesRequest.system:type_name -> deps_dev.v2alpha.System
	4,  // 2: deps_dev.v2alpha.PackagesResponse.packages:type_name -> deps_dev.v2alpha.PackageKey
	0,  // 3: deps_dev.v2alpha.VersionKey.system:type_name -> deps_dev.v2alpha.System
	1,  // 4: deps_dev.v2alpha.AdvisoryKey.source:type_name -> deps_dev.v2alpha.AdvisorySource
	4,  // 5: deps_dev.v2alpha.VersionsRequest.package_key:type_name -> deps_dev.v2alpha.PackageKey
	24, // 6: deps_dev.v2alpha.VersionsResponse.versions:type_name -> deps_dev.v2alpha.VersionsResponse.Version
	7,  // 7: deps_dev.v2alpha.VersionRequest.version_key:type_name -> deps_dev.v2alpha.VersionKey
	3,  // 8: deps_dev.v2alpha.VersionRequest.version_hash:type_name -> deps_dev.v2alpha.Digest
	2,  // 9: deps_dev.v2alpha.VersionRequest.extra_data_types:type_name -> deps_dev.v2alpha.DataType
	7,  // 10: deps_dev.v2alpha.VersionResponse.version_key:type_name -> deps_dev.v2alpha.VersionKey
	8,  // 11: deps_dev.v2alpha.VersionResponse.advisory_keys:type_name -> deps_dev.v2alpha.AdvisoryKey
	15, // 12: deps_dev.v2alpha.VersionResponse.links:type_name -> deps_dev.v2alpha.Link
	7,  // 13: deps_dev.v2alpha.DependenciesRequest.version_key:type_name -> deps_dev.v2alpha.VersionKey
	3,  // 14: deps_dev.v2alpha.DependenciesRequest.version_hash:type_name -> deps_dev.v2alpha.Digest
	2,  // 15: deps_dev.v2alpha.DependenciesRequest.extra_data_types:type_name -> deps_dev.v2alpha.DataType
	25, // 16: deps_dev.v2alpha.DependenciesResponse.nodes:type_name -> deps_dev.v2alpha.DependenciesResponse.Node
	26, // 17: deps_dev.v2alpha.DependenciesResponse.edges:type_name -> deps_dev.v2alpha.DependenciesResponse.Edge
	7,  // 18: deps_dev.v2alpha.DependentInfoRequest.version_key:type_name -> deps_dev.v2alpha.VersionKey
	3,  // 19: deps_dev.v2alpha.DependentInfoRequest.version_hash:type_name -> deps_dev.v2alpha.Digest
	7,  // 20: deps_dev.v2alpha.DependentInfoResponse.version_key:type_name -> deps_dev.v2alpha.VersionKey
	27, // 21: deps_dev.v2alpha.DependentInfoResponse.direct_dependent_samples:type_name -> deps_dev.v2alpha.DependentInfoResponse.Dependent
	27, // 22: deps_dev.v2alpha.DependentInfoResponse.indirect_dependent_samples:type_name -> deps_dev.v2alpha.DependentInfoResponse.Dependent
	8,  // 23: deps_dev.v2alpha.AdvisoryRequest.advisory_key:type_name -> deps_dev.v2alpha.AdvisoryKey
	8,  // 24: deps_dev.v2alpha.AdvisoryResponse.advisory_key:type_name -> deps_dev.v2alpha.AdvisoryKey
	28, // 25: deps_dev.v2alpha.ProjectResponse.scorecard:type_name -> deps_dev.v2alpha.ProjectResponse.Scorecard
	7,  // 26: deps_dev.v2alpha.ProjectPackageVersionsResponse.version_keys:type_name -> deps_dev.v2alpha.VersionKey
	7,  // 27: deps_dev.v2alpha.VersionsResponse.Version.version_key:type_name -> deps_dev.v2alpha.VersionKey
	7,  // 28: deps_dev.v2alpha.DependenciesResponse.Node.version_key:type_name -> deps_dev.v2alpha.VersionKey
	8,  // 29: deps_dev.v2alpha.DependenciesResponse.Node.advisory_keys:type_name -> deps_dev.v2alpha.AdvisoryKey
	15, // 30: deps_dev.v2alpha.DependenciesResponse.Node.links:type_name -> deps_dev.v2alpha.Link
	7,  // 31: deps_dev.v2alpha.DependentInfoResponse.Dependent.version_key:type_name -> deps_dev.v2alpha.VersionKey
	29, // 32: deps_dev.v2alpha.ProjectResponse.Scorecard.repository:type_name -> deps_dev.v2alpha.ProjectResponse.Scorecard.Repository
	30, // 33: deps_dev.v2alpha.ProjectResponse.Scorecard.scorecard:type_name -> deps_dev.v2alpha.ProjectResponse.Scorecard.ScorecardDetails
	31, // 34: deps_dev.v2alpha.ProjectResponse.Scorecard.checks:type_name -> deps_dev.v2alpha.ProjectResponse.Scorecard.Check
	32, // 35: deps_dev.v2alpha.ProjectResponse.Scorecard.Check.documentation:type_name -> deps_dev.v2alpha.ProjectResponse.Scorecard.Check.Documentation
	5,  // 36: deps_dev.v2alpha.Insights.Packages:input_type -> deps_dev.v2alpha.PackagesRequest
	9,  // 37: deps_dev.v2alpha.Insights.Versions:input_type -> deps_dev.v2alpha.VersionsRequest
	11, // 38: deps_dev.v2alpha.Insights.Version:input_type -> deps_dev.v2alpha.VersionRequest
	13, // 39: deps_dev.v2alpha.Insights.Dependencies:input_type -> deps_dev.v2alpha.DependenciesRequest
	16, // 40: deps_dev.v2alpha.Insights.DependentInfo:input_type -> deps_dev.v2alpha.DependentInfoRequest
	18, // 41: deps_dev.v2alpha.Insights.Advisory:input_type -> deps_dev.v2alpha.AdvisoryRequest
	20, // 42: deps_dev.v2alpha.Insights.Project:input_type -> deps_dev.v2alpha.ProjectRequest
	22, // 43: deps_dev.v2alpha.Insights.ProjectPackageVersions:input_type -> deps_dev.v2alpha.ProjectPackageVersionsRequest
	6,  // 44: deps_dev.v2alpha.Insights.Packages:output_type -> deps_dev.v2alpha.PackagesResponse
	10, // 45: deps_dev.v2alpha.Insights.Versions:output_type -> deps_dev.v2alpha.VersionsResponse
	12, // 46: deps_dev.v2alpha.Insights.Version:output_type -> deps_dev.v2alpha.VersionResponse
	14, // 47: deps_dev.v2alpha.Insights.Dependencies:output_type -> deps_dev.v2alpha.DependenciesResponse
	17, // 48: deps_dev.v2alpha.Insights.DependentInfo:output_type -> deps_dev.v2alpha.DependentInfoResponse
	19, // 49: deps_dev.v2alpha.Insights.Advisory:output_type -> deps_dev.v2alpha.AdvisoryResponse
	21, // 50: deps_dev.v2alpha.Insights.Project:output_type -> deps_dev.v2alpha.ProjectResponse
	23, // 51: deps_dev.v2alpha.Insights.ProjectPackageVersions:output_type -> deps_dev.v2alpha.ProjectPackageVersionsResponse
	44, // [44:52] is the sub-list for method output_type
	36, // [36:44] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_pkg_handler_collector_deps_dev_internal_api_proto_init() }
func file_pkg_handler_collector_deps_dev_internal_api_proto_init() {
	if File_pkg_handler_collector_deps_dev_internal_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Digest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvisoryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependenciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependentInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependentInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvisoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvisoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectPackageVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectPackageVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionsResponse_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependenciesResponse_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependenciesResponse_Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependentInfoResponse_Dependent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectResponse_Scorecard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectResponse_Scorecard_Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectResponse_Scorecard_ScorecardDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectResponse_Scorecard_Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectResponse_Scorecard_Check_Documentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_handler_collector_deps_dev_internal_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_handler_collector_deps_dev_internal_api_proto_goTypes,
		DependencyIndexes: file_pkg_handler_collector_deps_dev_internal_api_proto_depIdxs,
		EnumInfos:         file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes,
		MessageInfos:      file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes,
	}.Build()
	File_pkg_handler_collector_deps_dev_internal_api_proto = out.File
	file_pkg_handler_collector_deps_dev_internal_api_proto_rawDesc = nil
	file_pkg_handler_collector_deps_dev_internal_api_proto_goTypes = nil
	file_pkg_handler_collector_deps_dev_internal_api_proto_depIdxs = nil
}
