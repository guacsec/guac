// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: pkg/handler/collector/deps_dev/internal/api.proto

package internal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// System identifies a package management system.
type System int32

const (
	System_SYSTEM_UNSPECIFIED System = 0
	System_GO                 System = 1
	System_NPM                System = 3
	System_CARGO              System = 4
	System_MAVEN              System = 6
	System_PYPI               System = 7
	System_NUGET              System = 8
)

// Enum value maps for System.
var (
	System_name = map[int32]string{
		0: "SYSTEM_UNSPECIFIED",
		1: "GO",
		3: "NPM",
		4: "CARGO",
		6: "MAVEN",
		7: "PYPI",
		8: "NUGET",
	}
	System_value = map[string]int32{
		"SYSTEM_UNSPECIFIED": 0,
		"GO":                 1,
		"NPM":                3,
		"CARGO":              4,
		"MAVEN":              6,
		"PYPI":               7,
		"NUGET":              8,
	}
)

func (x System) Enum() *System {
	p := new(System)
	*p = x
	return p
}

func (x System) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (System) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[0].Descriptor()
}

func (System) Type() protoreflect.EnumType {
	return &file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[0]
}

func (x System) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use System.Descriptor instead.
func (System) EnumDescriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{0}
}

// HashType identifies a function used to produce a hash.
type HashType int32

const (
	HashType_HASH_TYPE_UNSPECIFIED HashType = 0
	HashType_MD5                   HashType = 1
	HashType_SHA1                  HashType = 2
	HashType_SHA256                HashType = 3
	HashType_SHA512                HashType = 4
)

// Enum value maps for HashType.
var (
	HashType_name = map[int32]string{
		0: "HASH_TYPE_UNSPECIFIED",
		1: "MD5",
		2: "SHA1",
		3: "SHA256",
		4: "SHA512",
	}
	HashType_value = map[string]int32{
		"HASH_TYPE_UNSPECIFIED": 0,
		"MD5":                   1,
		"SHA1":                  2,
		"SHA256":                3,
		"SHA512":                4,
	}
)

func (x HashType) Enum() *HashType {
	p := new(HashType)
	*p = x
	return p
}

func (x HashType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HashType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[1].Descriptor()
}

func (HashType) Type() protoreflect.EnumType {
	return &file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes[1]
}

func (x HashType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HashType.Descriptor instead.
func (HashType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{1}
}

// PackageKey identifies a package by name.
type PackageKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The package management system containing the package.
	System System `protobuf:"varint,1,opt,name=system,proto3,enum=deps_dev.v3alpha.System" json:"system,omitempty"`
	// The name of the package.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PackageKey) Reset() {
	*x = PackageKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageKey) ProtoMessage() {}

func (x *PackageKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageKey.ProtoReflect.Descriptor instead.
func (*PackageKey) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{0}
}

func (x *PackageKey) GetSystem() System {
	if x != nil {
		return x.System
	}
	return System_SYSTEM_UNSPECIFIED
}

func (x *PackageKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// VersionKey identifies a package version by name.
type VersionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The package management system containing the package.
	System System `protobuf:"varint,1,opt,name=system,proto3,enum=deps_dev.v3alpha.System" json:"system,omitempty"`
	// The name of the package.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The version of the package.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionKey) Reset() {
	*x = VersionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionKey) ProtoMessage() {}

func (x *VersionKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionKey.ProtoReflect.Descriptor instead.
func (*VersionKey) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{1}
}

func (x *VersionKey) GetSystem() System {
	if x != nil {
		return x.System
	}
	return System_SYSTEM_UNSPECIFIED
}

func (x *VersionKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VersionKey) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// ProjectKey identifies a project.
type ProjectKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A project identifier of the form `github.com/user/repo`,
	// `gitlab.com/user/repo`, or `bitbucket.org/user/repo`.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectKey) Reset() {
	*x = ProjectKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectKey) ProtoMessage() {}

func (x *ProjectKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectKey.ProtoReflect.Descriptor instead.
func (*ProjectKey) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// AdvisoryKey identifies a security advisory.
type AdvisoryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The OSV identifier for the security advisory.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvisoryKey) Reset() {
	*x = AdvisoryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvisoryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvisoryKey) ProtoMessage() {}

func (x *AdvisoryKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvisoryKey.ProtoReflect.Descriptor instead.
func (*AdvisoryKey) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{3}
}

func (x *AdvisoryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Hash represents the output of a hash function. These messages are used to
// identify package version artifacts by content hash.
type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The function used to produce this hash.
	Type HashType `protobuf:"varint,1,opt,name=type,proto3,enum=deps_dev.v3alpha.HashType" json:"type,omitempty"`
	// A hash value.
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{4}
}

func (x *Hash) GetType() HashType {
	if x != nil {
		return x.Type
	}
	return HashType_HASH_TYPE_UNSPECIFIED
}

func (x *Hash) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Link represents a link declared by or derived from package version metadata,
// to an external web resource such as a homepage or source code repository.
type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A label describing the resource that the link points to.
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The URL of the link.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{5}
}

func (x *Link) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// GetPackageRequest identifies a package for which to return information.
type GetPackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageKey *PackageKey `protobuf:"bytes,1,opt,name=package_key,json=packageKey,proto3" json:"package_key,omitempty"`
}

func (x *GetPackageRequest) Reset() {
	*x = GetPackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageRequest) ProtoMessage() {}

func (x *GetPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageRequest.ProtoReflect.Descriptor instead.
func (*GetPackageRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetPackageRequest) GetPackageKey() *PackageKey {
	if x != nil {
		return x.PackageKey
	}
	return nil
}

// Package holds information about a package, including a list of its available
// versions, with the default version marked if known.
type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the package. Note that it may differ from the name in the
	// request, due to canonicalization.
	PackageKey *PackageKey `protobuf:"bytes,1,opt,name=package_key,json=packageKey,proto3" json:"package_key,omitempty"`
	// The available versions of the package.
	Versions []*Package_Version `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{7}
}

func (x *Package) GetPackageKey() *PackageKey {
	if x != nil {
		return x.PackageKey
	}
	return nil
}

func (x *Package) GetVersions() []*Package_Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

// GetVersionRequest identifies a package version for which to return information.
type GetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionKey *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetVersionRequest) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

// Version holds information about a package version.
type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the package version. Note that the package and version name
	// may differ from names specified in requests, if applicable, due to
	// canonicalization.
	VersionKey *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	// If true, this is the default version of the package: the version that is
	// installed when no version is specified. The precise meaning of this is
	// system-specific, but it is commonly the version with the greatest version
	// number, ignoring pre-release versions.
	IsDefault bool `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	// The licenses governing the use of this package version.
	//
	// We identify licenses as
	// [SPDX 2.1](https://spdx.dev/spdx-specification-21-web-version/)
	// expressions. When there is no associated SPDX identifier, we identify a
	// license as "non-standard". When we are unable to obtain license
	// information, this field is empty. When more than one license is listed,
	// their relationship is unspecified.
	//
	// For Cargo, Maven, npm, and PyPI, license information is read from the
	// package metadata. For Go, license information is determined using the
	// [licensecheck](https://github.com/google/licensecheck) package.
	//
	// License information is not intended to be legal advice, and you should
	// independently verify the license or terms of any software for your own
	// needs.
	Licenses []string `protobuf:"bytes,3,rep,name=licenses,proto3" json:"licenses,omitempty"`
	// Security advisories known to affect this package version.
	// Further information can be requested using the Advisory method.
	AdvisoryKeys []*AdvisoryKey `protobuf:"bytes,4,rep,name=advisory_keys,json=advisoryKeys,proto3" json:"advisory_keys,omitempty"`
	// Links declared by or derived from package version metadata, to external
	// web resources such as a homepage or source code repository. Note that
	// these links are not verified for correctness.
	Links []*Link `protobuf:"bytes,5,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{9}
}

func (x *Version) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *Version) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *Version) GetLicenses() []string {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *Version) GetAdvisoryKeys() []*AdvisoryKey {
	if x != nil {
		return x.AdvisoryKeys
	}
	return nil
}

func (x *Version) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

// GetDependenciesRequest identifies a package version for which to return
// dependencies.
type GetDependenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionKey *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
}

func (x *GetDependenciesRequest) Reset() {
	*x = GetDependenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDependenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDependenciesRequest) ProtoMessage() {}

func (x *GetDependenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDependenciesRequest.ProtoReflect.Descriptor instead.
func (*GetDependenciesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetDependenciesRequest) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

// Dependencies holds a resolved dependency graph for a package version.
//
// The dependency graph should be similar to one produced by installing the
// package version on a generic 64-bit Linux system, with no other dependencies
// present. The precise meaning of this varies from system to system.
type Dependencies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The nodes of the dependency graph. The first node is the root of the graph.
	Nodes []*Dependencies_Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// The edges of the dependency graph.
	Edges []*Dependencies_Edge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	// Any error associated with the dependency graph that is not specific to a
	// node. An error here may imply the graph as a whole is incorrect.
	// This error message has no defined format and is intended for human
	// consumption.
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Dependencies) Reset() {
	*x = Dependencies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependencies) ProtoMessage() {}

func (x *Dependencies) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependencies.ProtoReflect.Descriptor instead.
func (*Dependencies) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{11}
}

func (x *Dependencies) GetNodes() []*Dependencies_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Dependencies) GetEdges() []*Dependencies_Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *Dependencies) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// GetProjectRequest identifies a project for which to return information.
type GetProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectKey *ProjectKey `protobuf:"bytes,1,opt,name=project_key,json=projectKey,proto3" json:"project_key,omitempty"`
}

func (x *GetProjectRequest) Reset() {
	*x = GetProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRequest) ProtoMessage() {}

func (x *GetProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRequest.ProtoReflect.Descriptor instead.
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{12}
}

func (x *GetProjectRequest) GetProjectKey() *ProjectKey {
	if x != nil {
		return x.ProjectKey
	}
	return nil
}

// Project holds information about a project hosted by GitHub, GitLab, or
// Bitbucket.
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier for the project. Note that this may differ from the
	// identifier in the request, due to canonicalization.
	ProjectKey *ProjectKey `protobuf:"bytes,1,opt,name=project_key,json=projectKey,proto3" json:"project_key,omitempty"`
	// The number of stars reported by the project host.
	// Only available for GitHub and GitLab.
	OpenIssuesCount int64 `protobuf:"varint,2,opt,name=open_issues_count,json=openIssuesCount,proto3" json:"open_issues_count,omitempty"`
	// The number of stars reported by the project host.
	// Only available for GitHub and GitLab.
	StarsCount int64 `protobuf:"varint,3,opt,name=stars_count,json=starsCount,proto3" json:"stars_count,omitempty"`
	// The number of forks reported by the project host.
	// Only available for GitHub and GitLab.
	ForksCount int64 `protobuf:"varint,4,opt,name=forks_count,json=forksCount,proto3" json:"forks_count,omitempty"`
	// The license reported by the project host.
	License string `protobuf:"bytes,5,opt,name=license,proto3" json:"license,omitempty"`
	// The description reported by the project host.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// The homepage reported by the project host.
	Homepage string `protobuf:"bytes,7,opt,name=homepage,proto3" json:"homepage,omitempty"`
	// An [OpenSSF Scorecard](https://github.com/ossf/scorecard) for the project,
	// if one is available.
	Scorecard *Project_Scorecard `protobuf:"bytes,8,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{13}
}

func (x *Project) GetProjectKey() *ProjectKey {
	if x != nil {
		return x.ProjectKey
	}
	return nil
}

func (x *Project) GetOpenIssuesCount() int64 {
	if x != nil {
		return x.OpenIssuesCount
	}
	return 0
}

func (x *Project) GetStarsCount() int64 {
	if x != nil {
		return x.StarsCount
	}
	return 0
}

func (x *Project) GetForksCount() int64 {
	if x != nil {
		return x.ForksCount
	}
	return 0
}

func (x *Project) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *Project) GetScorecard() *Project_Scorecard {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

// GetAdvisoryRequest identifies a security advisory for which to return
// information.
type GetAdvisoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvisoryKey *AdvisoryKey `protobuf:"bytes,1,opt,name=advisory_key,json=advisoryKey,proto3" json:"advisory_key,omitempty"`
}

func (x *GetAdvisoryRequest) Reset() {
	*x = GetAdvisoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvisoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvisoryRequest) ProtoMessage() {}

func (x *GetAdvisoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvisoryRequest.ProtoReflect.Descriptor instead.
func (*GetAdvisoryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetAdvisoryRequest) GetAdvisoryKey() *AdvisoryKey {
	if x != nil {
		return x.AdvisoryKey
	}
	return nil
}

// Advisory holds information about a security advisory hosted by OSV.
type Advisory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier for the security advisory. Note that this may differ from
	// the identifier in the request, due to canonicalization.
	AdvisoryKey *AdvisoryKey `protobuf:"bytes,1,opt,name=advisory_key,json=advisoryKey,proto3" json:"advisory_key,omitempty"`
	// The URL of the security advisory.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// A brief human-readable description.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// Other identifiers used for the advisory, including CVEs.
	Aliases []string `protobuf:"bytes,4,rep,name=aliases,proto3" json:"aliases,omitempty"`
	// The severity of the advisory as a CVSS v3 score in the range [0,10].
	// A higher score represents greater severity.
	Cvss3Score float32 `protobuf:"fixed32,5,opt,name=cvss3_score,json=cvss3Score,proto3" json:"cvss3_score,omitempty"`
	// The severity of the advisory as a CVSS v3 vector string.
	Cvss3Vector string `protobuf:"bytes,6,opt,name=cvss3_vector,json=cvss3Vector,proto3" json:"cvss3_vector,omitempty"`
}

func (x *Advisory) Reset() {
	*x = Advisory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Advisory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Advisory) ProtoMessage() {}

func (x *Advisory) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Advisory.ProtoReflect.Descriptor instead.
func (*Advisory) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{15}
}

func (x *Advisory) GetAdvisoryKey() *AdvisoryKey {
	if x != nil {
		return x.AdvisoryKey
	}
	return nil
}

func (x *Advisory) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Advisory) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Advisory) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *Advisory) GetCvss3Score() float32 {
	if x != nil {
		return x.Cvss3Score
	}
	return 0
}

func (x *Advisory) GetCvss3Vector() string {
	if x != nil {
		return x.Cvss3Vector
	}
	return ""
}

// QueryRequest identifies package versions for which to return information.
// At least one of its fields must be set, and both fields may be set to narrow
// the results.
type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A content hash for an artifact associated with a package version, such as a
	// JAR file. Currently supported for npm, Cargo, Maven, and NuGet. Note that
	// hashes and package versions have a many-to-many relationship.
	Hash *Hash `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// The name of the package version.
	VersionKey *VersionKey `protobuf:"bytes,2,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{16}
}

func (x *QueryRequest) GetHash() *Hash {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *QueryRequest) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

// QueryResult holds information about package versions matching the query.
type QueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Package versions matching the query. At most 1000 versions are returned.
	Versions []*Version `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *QueryResult) Reset() {
	*x = QueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult) ProtoMessage() {}

func (x *QueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult.ProtoReflect.Descriptor instead.
func (*QueryResult) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{17}
}

func (x *QueryResult) GetVersions() []*Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

type Package_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the version. Note that the package name may differ from the
	// name in the request, due to canonicalization.
	VersionKey *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	// If true, this is the default version of the package: the version that is
	// installed when no version is specified. The precise meaning of this is
	// system-specific, but it is commonly the version with the greatest
	// version number, ignoring pre-release versions.
	IsDefault bool `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *Package_Version) Reset() {
	*x = Package_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package_Version) ProtoMessage() {}

func (x *Package_Version) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package_Version.ProtoReflect.Descriptor instead.
func (*Package_Version) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Package_Version) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *Package_Version) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

// Node represents a node in a resolved dependency graph.
type Dependencies_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The package version represented by this node. Note that the package and
	// version name may differ from the names in the request, if provided, due
	// to canonicalization.
	//
	// For some systems, a graph may contain multiple nodes for the same
	// package version.
	VersionKey *VersionKey `protobuf:"bytes,1,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	// If true, this is a bundled dependency. For bundled dependencies, the
	// package name in the version key encodes how the dependency is bundled.
	//
	// As an example, a bundled dependency with a name like "a>1.2.3>b>c" is
	// part of the dependency graph of package "a" at version "1.2.3", and has
	// the local name "c". It may or may not be the same as a package with the
	// global name "c".
	Bundled bool `protobuf:"varint,2,opt,name=bundled,proto3" json:"bundled,omitempty"`
	// Errors associated with this node of the graph, such as an unresolved
	// dependency requirement. An error on a node may imply the graph as a
	// whole is incorrect. These error messages have no defined format and are
	// intended for human consumption.
	Errors []string `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *Dependencies_Node) Reset() {
	*x = Dependencies_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependencies_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependencies_Node) ProtoMessage() {}

func (x *Dependencies_Node) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependencies_Node.ProtoReflect.Descriptor instead.
func (*Dependencies_Node) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Dependencies_Node) GetVersionKey() *VersionKey {
	if x != nil {
		return x.VersionKey
	}
	return nil
}

func (x *Dependencies_Node) GetBundled() bool {
	if x != nil {
		return x.Bundled
	}
	return false
}

func (x *Dependencies_Node) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// Edge represents a directed edge in a resolved dependency graph: a
// dependency relation between two nodes.
type Dependencies_Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The node declaring the dependency, specified as an index into the list of
	// nodes.
	FromNode uint32 `protobuf:"varint,1,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	// The node resolving the dependency, specified as an index into the list of
	// nodes.
	ToNode uint32 `protobuf:"varint,2,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
	// The requirement resolved by this edge, as declared by the "from" node.
	// The meaning of this field is system-specific. As an example, in npm, the
	// requirement "^1.0.0" may be resolved by the version "1.2.3".
	Requirement string `protobuf:"bytes,3,opt,name=requirement,proto3" json:"requirement,omitempty"`
}

func (x *Dependencies_Edge) Reset() {
	*x = Dependencies_Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependencies_Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependencies_Edge) ProtoMessage() {}

func (x *Dependencies_Edge) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependencies_Edge.ProtoReflect.Descriptor instead.
func (*Dependencies_Edge) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{11, 1}
}

func (x *Dependencies_Edge) GetFromNode() uint32 {
	if x != nil {
		return x.FromNode
	}
	return 0
}

func (x *Dependencies_Edge) GetToNode() uint32 {
	if x != nil {
		return x.ToNode
	}
	return 0
}

func (x *Dependencies_Edge) GetRequirement() string {
	if x != nil {
		return x.Requirement
	}
	return ""
}

type Project_Scorecard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date at which the scorecard was produced.
	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// The source code repository and commit the scorecard was produced from.
	Repository *Project_Scorecard_Repository `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	// The version and commit of the Scorecard program used to produce the
	// scorecard.
	Scorecard *Project_Scorecard_ScorecardDetails `protobuf:"bytes,3,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
	// The results of the
	// [Scorecard Checks](https://github.com/ossf/scorecard#scorecard-checks)
	// performed on the project.
	Checks []*Project_Scorecard_Check `protobuf:"bytes,4,rep,name=checks,proto3" json:"checks,omitempty"`
	// A weighted average score in the range [0,10]. A higher score is better.
	OverallScore float32 `protobuf:"fixed32,5,opt,name=overall_score,json=overallScore,proto3" json:"overall_score,omitempty"`
	// Additional metadata associated with the scorecard.
	Metadata []string `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Project_Scorecard) Reset() {
	*x = Project_Scorecard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Scorecard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Scorecard) ProtoMessage() {}

func (x *Project_Scorecard) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Scorecard.ProtoReflect.Descriptor instead.
func (*Project_Scorecard) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Project_Scorecard) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Project_Scorecard) GetRepository() *Project_Scorecard_Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *Project_Scorecard) GetScorecard() *Project_Scorecard_ScorecardDetails {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

func (x *Project_Scorecard) GetChecks() []*Project_Scorecard_Check {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *Project_Scorecard) GetOverallScore() float32 {
	if x != nil {
		return x.OverallScore
	}
	return 0
}

func (x *Project_Scorecard) GetMetadata() []string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Project_Scorecard_Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source code repository the scorecard was produced from.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The source code commit the scorecard was produced from.
	Commit string `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *Project_Scorecard_Repository) Reset() {
	*x = Project_Scorecard_Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Scorecard_Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Scorecard_Repository) ProtoMessage() {}

func (x *Project_Scorecard_Repository) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Scorecard_Repository.ProtoReflect.Descriptor instead.
func (*Project_Scorecard_Repository) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{13, 0, 0}
}

func (x *Project_Scorecard_Repository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project_Scorecard_Repository) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

type Project_Scorecard_ScorecardDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The version of the Scorecard program used to produce the scorecard.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// The commit of the Scorecard program used to produce the scorecard.
	Commit string `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *Project_Scorecard_ScorecardDetails) Reset() {
	*x = Project_Scorecard_ScorecardDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Scorecard_ScorecardDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Scorecard_ScorecardDetails) ProtoMessage() {}

func (x *Project_Scorecard_ScorecardDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Scorecard_ScorecardDetails.ProtoReflect.Descriptor instead.
func (*Project_Scorecard_ScorecardDetails) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{13, 0, 1}
}

func (x *Project_Scorecard_ScorecardDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Project_Scorecard_ScorecardDetails) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

type Project_Scorecard_Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the check.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable documentation for the check.
	Documentation *Project_Scorecard_Check_Documentation `protobuf:"bytes,2,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// A score in the range [0,10]. A higher score is better.
	// A negative score indicates that the check did not run successfully.
	Score int64 `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	// The reason for the score.
	Reason string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	// Further details regarding the check.
	Details []string `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *Project_Scorecard_Check) Reset() {
	*x = Project_Scorecard_Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Scorecard_Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Scorecard_Check) ProtoMessage() {}

func (x *Project_Scorecard_Check) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Scorecard_Check.ProtoReflect.Descriptor instead.
func (*Project_Scorecard_Check) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{13, 0, 2}
}

func (x *Project_Scorecard_Check) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project_Scorecard_Check) GetDocumentation() *Project_Scorecard_Check_Documentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *Project_Scorecard_Check) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Project_Scorecard_Check) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Project_Scorecard_Check) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

type Project_Scorecard_Check_Documentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A short description of the check.
	ShortDescription string `protobuf:"bytes,1,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	// A link to more details about the check.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Project_Scorecard_Check_Documentation) Reset() {
	*x = Project_Scorecard_Check_Documentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Scorecard_Check_Documentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Scorecard_Check_Documentation) ProtoMessage() {}

func (x *Project_Scorecard_Check_Documentation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Scorecard_Check_Documentation.ProtoReflect.Descriptor instead.
func (*Project_Scorecard_Check_Documentation) Descriptor() ([]byte, []int) {
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP(), []int{13, 0, 2, 0}
}

func (x *Project_Scorecard_Check_Documentation) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Project_Scorecard_Check_Documentation) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_pkg_handler_collector_deps_dev_internal_api_proto protoreflect.FileDescriptor

var file_pkg_handler_collector_deps_dev_internal_api_proto_rawDesc = []byte{
	0x0a, 0x31, 0x70, 0x6b, 0x67, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e,
	0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x0a, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f,
	0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x65,
	0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xf0, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f,
	0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x3d, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e,
	0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x67, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52,
	0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x52, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e,
	0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0xf5,
	0x01, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79,
	0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65,
	0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41,
	0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64,
	0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76,
	0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22,
	0xf3, 0x02, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x39, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x70,
	0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52,
	0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x77, 0x0a, 0x04,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x5e, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x6f, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xcc, 0x08, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70,
	0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x72, 0x64, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x1a, 0xf8, 0x05,
	0x0a, 0x09, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x52, 0x0a, 0x09, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x72, 0x64, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x12,
	0x41, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x06, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x1a, 0x44, 0x0a,
	0x10, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x1a, 0x92, 0x02, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x5d, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f,
	0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x4e, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x0c, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e,
	0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79,
	0x4b, 0x65, 0x79, 0x52, 0x0b, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x22, 0xd2, 0x01, 0x0a, 0x08, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x12, 0x40, 0x0a,
	0x0c, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x52, 0x0b, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x76, 0x73, 0x73, 0x33, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x76, 0x73, 0x73, 0x33, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x76, 0x73, 0x73, 0x33, 0x5f, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x76, 0x73, 0x73, 0x33, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x79, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x3d, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65,
	0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x22, 0x44, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x35, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x5c, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x4f, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x4e, 0x50, 0x4d, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x41, 0x52,
	0x47, 0x4f, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x10, 0x06, 0x12,
	0x08, 0x0a, 0x04, 0x50, 0x59, 0x50, 0x49, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x55, 0x47,
	0x45, 0x54, 0x10, 0x08, 0x2a, 0x50, 0x0a, 0x08, 0x48, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x15, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x44, 0x35, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x48, 0x41, 0x31, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48,
	0x41, 0x35, 0x31, 0x32, 0x10, 0x04, 0x32, 0xf6, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65,
	0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65,
	0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65,
	0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x23, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76,
	0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72,
	0x79, 0x12, 0x24, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64,
	0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73,
	0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e,
	0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42,
	0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x75,
	0x61, 0x63, 0x73, 0x65, 0x63, 0x2f, 0x67, 0x75, 0x61, 0x63, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2f, 0x64, 0x65, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescOnce sync.Once
	file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescData = file_pkg_handler_collector_deps_dev_internal_api_proto_rawDesc
)

func file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescGZIP() []byte {
	file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescOnce.Do(func() {
		file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescData)
	})
	return file_pkg_handler_collector_deps_dev_internal_api_proto_rawDescData
}

var file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_pkg_handler_collector_deps_dev_internal_api_proto_goTypes = []interface{}{
	(System)(0),                                   // 0: deps_dev.v3alpha.System
	(HashType)(0),                                 // 1: deps_dev.v3alpha.HashType
	(*PackageKey)(nil),                            // 2: deps_dev.v3alpha.PackageKey
	(*VersionKey)(nil),                            // 3: deps_dev.v3alpha.VersionKey
	(*ProjectKey)(nil),                            // 4: deps_dev.v3alpha.ProjectKey
	(*AdvisoryKey)(nil),                           // 5: deps_dev.v3alpha.AdvisoryKey
	(*Hash)(nil),                                  // 6: deps_dev.v3alpha.Hash
	(*Link)(nil),                                  // 7: deps_dev.v3alpha.Link
	(*GetPackageRequest)(nil),                     // 8: deps_dev.v3alpha.GetPackageRequest
	(*Package)(nil),                               // 9: deps_dev.v3alpha.Package
	(*GetVersionRequest)(nil),                     // 10: deps_dev.v3alpha.GetVersionRequest
	(*Version)(nil),                               // 11: deps_dev.v3alpha.Version
	(*GetDependenciesRequest)(nil),                // 12: deps_dev.v3alpha.GetDependenciesRequest
	(*Dependencies)(nil),                          // 13: deps_dev.v3alpha.Dependencies
	(*GetProjectRequest)(nil),                     // 14: deps_dev.v3alpha.GetProjectRequest
	(*Project)(nil),                               // 15: deps_dev.v3alpha.Project
	(*GetAdvisoryRequest)(nil),                    // 16: deps_dev.v3alpha.GetAdvisoryRequest
	(*Advisory)(nil),                              // 17: deps_dev.v3alpha.Advisory
	(*QueryRequest)(nil),                          // 18: deps_dev.v3alpha.QueryRequest
	(*QueryResult)(nil),                           // 19: deps_dev.v3alpha.QueryResult
	(*Package_Version)(nil),                       // 20: deps_dev.v3alpha.Package.Version
	(*Dependencies_Node)(nil),                     // 21: deps_dev.v3alpha.Dependencies.Node
	(*Dependencies_Edge)(nil),                     // 22: deps_dev.v3alpha.Dependencies.Edge
	(*Project_Scorecard)(nil),                     // 23: deps_dev.v3alpha.Project.Scorecard
	(*Project_Scorecard_Repository)(nil),          // 24: deps_dev.v3alpha.Project.Scorecard.Repository
	(*Project_Scorecard_ScorecardDetails)(nil),    // 25: deps_dev.v3alpha.Project.Scorecard.ScorecardDetails
	(*Project_Scorecard_Check)(nil),               // 26: deps_dev.v3alpha.Project.Scorecard.Check
	(*Project_Scorecard_Check_Documentation)(nil), // 27: deps_dev.v3alpha.Project.Scorecard.Check.Documentation
	(*timestamppb.Timestamp)(nil),                 // 28: google.protobuf.Timestamp
}
var file_pkg_handler_collector_deps_dev_internal_api_proto_depIdxs = []int32{
	0,  // 0: deps_dev.v3alpha.PackageKey.system:type_name -> deps_dev.v3alpha.System
	0,  // 1: deps_dev.v3alpha.VersionKey.system:type_name -> deps_dev.v3alpha.System
	1,  // 2: deps_dev.v3alpha.Hash.type:type_name -> deps_dev.v3alpha.HashType
	2,  // 3: deps_dev.v3alpha.GetPackageRequest.package_key:type_name -> deps_dev.v3alpha.PackageKey
	2,  // 4: deps_dev.v3alpha.Package.package_key:type_name -> deps_dev.v3alpha.PackageKey
	20, // 5: deps_dev.v3alpha.Package.versions:type_name -> deps_dev.v3alpha.Package.Version
	3,  // 6: deps_dev.v3alpha.GetVersionRequest.version_key:type_name -> deps_dev.v3alpha.VersionKey
	3,  // 7: deps_dev.v3alpha.Version.version_key:type_name -> deps_dev.v3alpha.VersionKey
	5,  // 8: deps_dev.v3alpha.Version.advisory_keys:type_name -> deps_dev.v3alpha.AdvisoryKey
	7,  // 9: deps_dev.v3alpha.Version.links:type_name -> deps_dev.v3alpha.Link
	3,  // 10: deps_dev.v3alpha.GetDependenciesRequest.version_key:type_name -> deps_dev.v3alpha.VersionKey
	21, // 11: deps_dev.v3alpha.Dependencies.nodes:type_name -> deps_dev.v3alpha.Dependencies.Node
	22, // 12: deps_dev.v3alpha.Dependencies.edges:type_name -> deps_dev.v3alpha.Dependencies.Edge
	4,  // 13: deps_dev.v3alpha.GetProjectRequest.project_key:type_name -> deps_dev.v3alpha.ProjectKey
	4,  // 14: deps_dev.v3alpha.Project.project_key:type_name -> deps_dev.v3alpha.ProjectKey
	23, // 15: deps_dev.v3alpha.Project.scorecard:type_name -> deps_dev.v3alpha.Project.Scorecard
	5,  // 16: deps_dev.v3alpha.GetAdvisoryRequest.advisory_key:type_name -> deps_dev.v3alpha.AdvisoryKey
	5,  // 17: deps_dev.v3alpha.Advisory.advisory_key:type_name -> deps_dev.v3alpha.AdvisoryKey
	6,  // 18: deps_dev.v3alpha.QueryRequest.hash:type_name -> deps_dev.v3alpha.Hash
	3,  // 19: deps_dev.v3alpha.QueryRequest.version_key:type_name -> deps_dev.v3alpha.VersionKey
	11, // 20: deps_dev.v3alpha.QueryResult.versions:type_name -> deps_dev.v3alpha.Version
	3,  // 21: deps_dev.v3alpha.Package.Version.version_key:type_name -> deps_dev.v3alpha.VersionKey
	3,  // 22: deps_dev.v3alpha.Dependencies.Node.version_key:type_name -> deps_dev.v3alpha.VersionKey
	28, // 23: deps_dev.v3alpha.Project.Scorecard.date:type_name -> google.protobuf.Timestamp
	24, // 24: deps_dev.v3alpha.Project.Scorecard.repository:type_name -> deps_dev.v3alpha.Project.Scorecard.Repository
	25, // 25: deps_dev.v3alpha.Project.Scorecard.scorecard:type_name -> deps_dev.v3alpha.Project.Scorecard.ScorecardDetails
	26, // 26: deps_dev.v3alpha.Project.Scorecard.checks:type_name -> deps_dev.v3alpha.Project.Scorecard.Check
	27, // 27: deps_dev.v3alpha.Project.Scorecard.Check.documentation:type_name -> deps_dev.v3alpha.Project.Scorecard.Check.Documentation
	8,  // 28: deps_dev.v3alpha.Insights.GetPackage:input_type -> deps_dev.v3alpha.GetPackageRequest
	10, // 29: deps_dev.v3alpha.Insights.GetVersion:input_type -> deps_dev.v3alpha.GetVersionRequest
	12, // 30: deps_dev.v3alpha.Insights.GetDependencies:input_type -> deps_dev.v3alpha.GetDependenciesRequest
	14, // 31: deps_dev.v3alpha.Insights.GetProject:input_type -> deps_dev.v3alpha.GetProjectRequest
	16, // 32: deps_dev.v3alpha.Insights.GetAdvisory:input_type -> deps_dev.v3alpha.GetAdvisoryRequest
	18, // 33: deps_dev.v3alpha.Insights.Query:input_type -> deps_dev.v3alpha.QueryRequest
	9,  // 34: deps_dev.v3alpha.Insights.GetPackage:output_type -> deps_dev.v3alpha.Package
	11, // 35: deps_dev.v3alpha.Insights.GetVersion:output_type -> deps_dev.v3alpha.Version
	13, // 36: deps_dev.v3alpha.Insights.GetDependencies:output_type -> deps_dev.v3alpha.Dependencies
	15, // 37: deps_dev.v3alpha.Insights.GetProject:output_type -> deps_dev.v3alpha.Project
	17, // 38: deps_dev.v3alpha.Insights.GetAdvisory:output_type -> deps_dev.v3alpha.Advisory
	19, // 39: deps_dev.v3alpha.Insights.Query:output_type -> deps_dev.v3alpha.QueryResult
	34, // [34:40] is the sub-list for method output_type
	28, // [28:34] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_pkg_handler_collector_deps_dev_internal_api_proto_init() }
func file_pkg_handler_collector_deps_dev_internal_api_proto_init() {
	if File_pkg_handler_collector_deps_dev_internal_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvisoryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDependenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependencies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvisoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Advisory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependencies_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependencies_Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Scorecard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Scorecard_Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Scorecard_ScorecardDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Scorecard_Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Scorecard_Check_Documentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_handler_collector_deps_dev_internal_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_handler_collector_deps_dev_internal_api_proto_goTypes,
		DependencyIndexes: file_pkg_handler_collector_deps_dev_internal_api_proto_depIdxs,
		EnumInfos:         file_pkg_handler_collector_deps_dev_internal_api_proto_enumTypes,
		MessageInfos:      file_pkg_handler_collector_deps_dev_internal_api_proto_msgTypes,
	}.Build()
	File_pkg_handler_collector_deps_dev_internal_api_proto = out.File
	file_pkg_handler_collector_deps_dev_internal_api_proto_rawDesc = nil
	file_pkg_handler_collector_deps_dev_internal_api_proto_goTypes = nil
	file_pkg_handler_collector_deps_dev_internal_api_proto_depIdxs = nil
}
