//
// Copyright 2023 The GUAC Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: guac/pkg/certifier/scorecard/types.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	pkg "github.com/ossf/scorecard/v4/pkg"
)

// MockScorecard is a mock of Scorecard interface.
type MockScorecard struct {
	ctrl     *gomock.Controller
	recorder *MockScorecardMockRecorder
}

// MockScorecardMockRecorder is the mock recorder for MockScorecard.
type MockScorecardMockRecorder struct {
	mock *MockScorecard
}

// NewMockScorecard creates a new mock instance.
func NewMockScorecard(ctrl *gomock.Controller) *MockScorecard {
	mock := &MockScorecard{ctrl: ctrl}
	mock.recorder = &MockScorecardMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScorecard) EXPECT() *MockScorecardMockRecorder {
	return m.recorder
}

// GetScore mocks base method.
func (m *MockScorecard) GetScore(repoName, commitSHA string) (*pkg.ScorecardResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScore", repoName, commitSHA)
	ret0, _ := ret[0].(*pkg.ScorecardResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScore indicates an expected call of GetScore.
func (mr *MockScorecardMockRecorder) GetScore(repoName, commitSHA interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScore", reflect.TypeOf((*MockScorecard)(nil).GetScore), repoName, commitSHA)
}
