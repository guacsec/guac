// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.1-0.20240823215434-d232e9efa9f5 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
