// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.1-0.20240823215434-d232e9efa9f5 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"PW0i4B0AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
