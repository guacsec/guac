// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.1-0.20240823215434-d232e9efa9f5 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"xwUaeJu/AwAA//+tdz+6GRUAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
