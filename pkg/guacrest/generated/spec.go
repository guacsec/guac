// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"3/8vAAD//+ShQKrGHQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
