// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
