// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.1-0.20240823215434-d232e9efa9f5 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"UnGr3vwrAAD//1kT8b3NFwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
