// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
