// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.1-0.20240823215434-d232e9efa9f5 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
