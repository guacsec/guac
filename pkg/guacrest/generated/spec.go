// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.1-0.20240823215434-d232e9efa9f5 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
