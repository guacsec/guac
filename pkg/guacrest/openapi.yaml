#
#  Copyright 2024 The GUAC Authors.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

openapi: "3.0.0"
paths:
  # the query endpoints are for simple queries of the graph
  # the analysis endpoints are for more advanced questions
  "/healthz":
    get:
      summary: Health check the server
      operationId: healthCheck
      responses:
        "200":
          description: Indicates the server is healthy
          content:
            application/json:
              schema:
                type: string
  "/query/dependencies":
    get:
      summary: Retrieve transitive dependencies 
      description: > 
        Find the transitive dependencies of the input. The HasSBOM and HasSLSA
        predicates are used as the dependency relationship and the IsOccurrence and 
        PkgEqual predicates are used to find consider equivalent packages.
      operationId: retrieveDependencies
      parameters:
        - $ref: "#/components/parameters/PaginationSpec"
        - name: linkCondition
          description: > 
            Whether links between nouns must be made by digest or if they 
            can be made just by name (i.e. purl). Specify 'name' to allow using
            SBOMs that don't provide the digest of the subject. The default is 
            'digest'. To search by purl, 'name' must be specified.
          in: query
          required: false
          schema:
            type: string 
            enum: 
              - digest
              - name
        - name: purl
          description: The purl of the dependent package.
          in: query
          required: false
          schema:
            type: string
        - name: digest
          description: The digest of the dependent package.
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/PurlList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "502":
          $ref: "#/components/responses/BadGateway"
  "/analysis/dependencies":
    get:
      summary: Identify the most important dependencies
      operationId: analyzeDependencies
      parameters:
        - $ref: "#/components/parameters/PaginationSpec"
        - name: sort
          description: >
            The sort order of the packages
              * 'frequency' - The packages with the highest number of dependents
              * 'scorecard' - The packages with the lowest OpenSSF scorecard score
          in: query
          required: true
          schema:
            type: string
            enum:
              - frequency
              - scorecard
      responses:
        "200":
          $ref: "#/components/responses/PackageNameList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "502":
          $ref: "#/components/responses/BadGateway"
  "/v1/package/{purlOrArtifact}":
    get:
      summary: Get package or artifact information
      operationId: getPackageInfo
      parameters:
        - name: purlOrArtifact
          in: path
          required: true
          description: URL-encoded Package URL (PURL) or artifact identifier
          schema:
            type: string
        - name: query
          in: query
          required: false
          description: Comma-separated list of additional information to include in the response
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QueryType'
          style: form
          explode: false
      responses:
        "200":
          $ref: "#/components/responses/PackageInfoResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  parameters:
    PaginationSpec:
      name: paginationSpec 
      in: query
      description: >
        The pagination configuration for the query.
          * 'PageSize' specifies the number of results returned
          * 'Cursor' is returned by previous calls and specifies what page to return
      required: false
      schema:
        type: object
        properties:
          PageSize: 
            type: integer 
          Cursor: 
            type: string
  schemas:
    Purl:
      type: string
    PaginationInfo:
      type: object
      description: >
        Contains the cursor to retrieve more pages. If there are no more, 
        NextCursor will be nil.
      properties: 
        NextCursor:
          type: string
        TotalCount:
          type: integer
    Error:
      type: object
      required:
        - Message
      properties:
        Message:
          type: string
    WeightedNACDPackageName:
      type: object
      required:
        - Name
        - DependentCount
      properties:
        Name:
          $ref: "#/components/schemas/Purl"
        DependentCount:
          type: integer
    PackageInfo:
      type: string
      description: The Package URL (PURL) of the package(s) being outputted
    Vulnerability:
      type: object
      required:
        - packages
        - vulnerability
        - metadata
      properties:
        packages:
          type: array
          items:
            $ref: "#/components/schemas/PackageInfo"
        vulnerability:
          $ref: '#/components/schemas/VulnerabilityDetails'
        metadata:
          $ref: '#/components/schemas/ScanMetadata'
    VulnerabilityDetails:
      type: object
      required:
        - vulnerabilityIDs
      properties:
        type:
          type: string
        vulnerabilityIDs:
          type: array
          items:
            type: string
    ScanMetadata:
      type: object
      properties:
        dbUri:
          type: string
        dbVersion:
          type: string
        scannerUri:
          type: string
        scannerVersion:
          type: string
        timeScanned:
          type: string
          format: date-time
        origin:
          type: string
        collector:
          type: string
    QueryType:
      type: string
      enum: [ vulns, dependencies, latestSbom ]
      x-enum-varnames: [ Vulns, Dependencies, LatestSbom ]
  responses:
    # for code 200
    PurlList:
      description: A list of purls
      content:
        application/json:
          schema:
            type: object
            required:
              - PaginationInfo
              - PurlList
            properties:
              PaginationInfo:
                $ref: "#/components/schemas/PaginationInfo"
              PurlList:
                type: array
                items:
                  $ref: "#/components/schemas/Purl"
    PackageNameList:
      description: A list of package names with their dependent counts
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WeightedNACDPackageName"
    PackageInfoResponse:
      description: Package information and optional related data
      content:
        application/json:
          schema:
            type: object
            required:
              - packages
            properties:
              packages:
                type: array
                items:
                  $ref: "#/components/schemas/PackageInfo"
              vulnerabilities:
                type: array
                items:
                  $ref: "#/components/schemas/Vulnerability"
              dependencies:
                type: array
                items:
                  $ref: "#/components/schemas/PackageInfo"
            additionalProperties: true  # This allows for future extensibility
    # intended for code 400, client side error
    BadRequest:
      description: Bad request, such as from invalid or missing parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    # for code 500
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    # for code 502
    BadGateway:
      description: The server encountered an error connecting to the data backend
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
