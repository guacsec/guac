#
#  Copyright 2024 The GUAC Authors.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

openapi: "3.0.0"
paths:
  # the query endpoints are for simple queries of the graph
  # the analysis endpoints are for more advanced questions
  "/healthz":
    get:
      summary: Health check the server
      operationId: healthCheck
      responses:
        "200":
          description: Indicates the server is healthy
          content:
            application/json:
              schema:
                type: string
  "/analysis/dependencies":
    get:
      summary: Identify the most important dependencies
      operationId: analyzeDependencies
      parameters:
        - $ref: "#/components/parameters/PaginationSpec"
        - name: sort
          description: >
            The sort order of the packages
              * 'frequency' - The packages with the highest number of dependents
              * 'scorecard' - The packages with the lowest OpenSSF scorecard score
          in: query
          required: true
          schema:
            type: string
            enum:
              - frequency
              - scorecard
      responses:
        "200":
          $ref: "#/components/responses/PackageNameList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "502":
          $ref: "#/components/responses/BadGateway"
  "/v0/package/{purl}":
    get:
      summary: Get all purls related to the given purl
      description: >
        If a partial purl, pkg:foo/bar is passed in, then it would find all purls 
        associated with the given purl, such as pkg:foo/bar@1.0, and pkg:foo/bar@2.0.
      operationId: getPackagePurls
      parameters:
        - name: purl
          in: path
          required: true
          description: URL-encoded Package URL (purl)
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/PurlList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "502":
          $ref: "#/components/responses/BadGateway"
  "/v0/package/{purl}/vulns":
    get:
      summary: Get vulnerabilities for a Package URL (purl)
      description: >
        If a partial purl is passed in, then it will find all associated purls 
        and find vulnerabilities of those. For example, if the partial purl 
        pkg:foo/bar is passed in, it would find all purls associated with 
        pkg:foo/bar, such as pkg:foo/bar@1.0, and pkg:foo/bar@2.0. This endpoint 
        will then find all vulnerabilities for these purls. If the `includeDependencies`
        flag is set to true, it will also include vulnerabilities of the dependencies.
      operationId: getPackageVulns
      parameters:
        - name: purl
          in: path
          required: true
          description: URL-encoded Package URL (purl)
          schema:
            type: string
        - name: includeDependencies
          in: query
          required: false
          description: >
            A flag to include vulnerabilities of the dependencies. If true, the 
            response will include vulnerabilities for the purl and its dependencies 
            instead of the vulnerabilities of just the purl.
          schema:
            type: boolean
            default: false
      responses:
        "200":
          $ref: "#/components/responses/VulnerabilityList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "502":
          $ref: "#/components/responses/BadGateway"
  "/v0/package/{purl}/dependencies":
    get:
      summary: Get dependencies for a specific Package URL (purl)
      description: >
        If a partial purl is passed in, then it will find all associated purls 
        and find the dependencies of those. For example, if the partial purl 
        pkg:foo/bar is passed in, it would find all purls associated with 
        pkg:foo/bar, such as pkg:foo/bar@1.0, and pkg:foo/bar@2.0. This endpoint 
        will then find all dependencies for these purls.
      operationId: getPackageDeps
      parameters:
        - name: purl
          in: path
          required: true
          description: URL-encoded Package URL (purl)
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/PurlList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "502":
          $ref: "#/components/responses/BadGateway"
  "/v0/artifact/{digest}/vulns":
    get:
      summary: Get vulnerabilities for a specific digest
      operationId: getArtifactVulns
      parameters:
        - name: digest
          in: path
          required: true
          description: Digest, the second part from artifact identifier in the format <algorithm:digest>
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/VulnerabilityList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "502":
          $ref: "#/components/responses/BadGateway"
  "/v0/artifact/{digest}/dependencies":
    get:
      summary: Get dependencies for a specific digest
      operationId: getArtifactDeps
      parameters:
        - name: digest
          in: path
          required: true
          description: Digest, the second part from artifact identifier in the format <algorithm:digest>
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/PurlList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "502":
          $ref: "#/components/responses/BadGateway"

components:
  parameters:
    PaginationSpec:
      name: paginationSpec 
      in: query
      description: >
        The pagination configuration for the query.
          * 'PageSize' specifies the number of results returned
          * 'Cursor' is returned by previous calls and specifies what page to return
      required: false
      schema:
        type: object
        properties:
          PageSize: 
            type: integer 
          Cursor: 
            type: string
  schemas:
    Purl:
      type: string
    PaginationInfo:
      type: object
      description: >
        Contains the cursor to retrieve more pages. If there are no more, 
        NextCursor will be nil.
      properties: 
        NextCursor:
          type: string
        TotalCount:
          type: integer
    Error:
      type: object
      required:
        - Message
      properties:
        Message:
          type: string
    PackageName:
      type: object
      required:
        - Name
        - DependentCount
      properties:
        Name:
          $ref: "#/components/schemas/Purl"
        DependentCount:
          type: integer
    Vulnerability:
      type: object
      required:
        - package
        - vulnerability
        - metadata
      properties:
        package:
          type: string
        vulnerability:
          $ref: '#/components/schemas/VulnerabilityDetails'
        metadata:
          $ref: '#/components/schemas/ScanMetadata'
    VulnerabilityDetails:
      type: object
      required:
        - vulnerabilityIDs
      properties:
        type:
          type: string
        vulnerabilityIDs:
          type: array
          items:
            type: string
          description: >
            A list of vulnerability identifiers. These can be CVE IDs or other 
            formats used to identify vulnerabilities.
    ScanMetadata:
      type: object
      properties:
        dbUri:
          type: string
        dbVersion:
          type: string
        scannerUri:
          type: string
        scannerVersion:
          type: string
        timeScanned:
          type: string
          format: date-time
        origin:
          type: string
        collector:
          type: string
  responses:
    # for code 200
    PurlList:
      description: A list of purls
      content:
        application/json:
          schema:
            type: object
            required:
              - PaginationInfo
              - PurlList
            properties:
              PaginationInfo:
                $ref: "#/components/schemas/PaginationInfo"
              PurlList:
                type: array
                items:
                  $ref: "#/components/schemas/Purl"
    PackageNameList:
      description: A list of package names with their dependent counts
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PackageName"
    VulnerabilityList:
      description: A list of vulnerabilities associated with the package or artifact
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Vulnerability"
    DependencyList:
      description: A list of dependencies associated with the package or artifact
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
    # intended for code 400, client side error
    BadRequest:
      description: Bad request, such as from invalid or missing parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    # for code 500
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    # for code 502
    BadGateway:
      description: The server encountered an error connecting to the data backend
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
