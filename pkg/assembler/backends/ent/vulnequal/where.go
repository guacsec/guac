// Code generated by ent, DO NOT EDIT.

package vulnequal

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
	"github.com/guacsec/guac/pkg/assembler/backends/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLTE(FieldID, id))
}

// VulnID applies equality check predicate on the "vuln_id" field. It's identical to VulnIDEQ.
func VulnID(v uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldVulnID, v))
}

// EqualVulnID applies equality check predicate on the "equal_vuln_id" field. It's identical to EqualVulnIDEQ.
func EqualVulnID(v uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldEqualVulnID, v))
}

// Justification applies equality check predicate on the "justification" field. It's identical to JustificationEQ.
func Justification(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldJustification, v))
}

// Origin applies equality check predicate on the "origin" field. It's identical to OriginEQ.
func Origin(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldOrigin, v))
}

// Collector applies equality check predicate on the "collector" field. It's identical to CollectorEQ.
func Collector(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldCollector, v))
}

// VulnerabilitiesHash applies equality check predicate on the "vulnerabilities_hash" field. It's identical to VulnerabilitiesHashEQ.
func VulnerabilitiesHash(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldVulnerabilitiesHash, v))
}

// VulnIDEQ applies the EQ predicate on the "vuln_id" field.
func VulnIDEQ(v uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldVulnID, v))
}

// VulnIDNEQ applies the NEQ predicate on the "vuln_id" field.
func VulnIDNEQ(v uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNEQ(FieldVulnID, v))
}

// VulnIDIn applies the In predicate on the "vuln_id" field.
func VulnIDIn(vs ...uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldIn(FieldVulnID, vs...))
}

// VulnIDNotIn applies the NotIn predicate on the "vuln_id" field.
func VulnIDNotIn(vs ...uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNotIn(FieldVulnID, vs...))
}

// EqualVulnIDEQ applies the EQ predicate on the "equal_vuln_id" field.
func EqualVulnIDEQ(v uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldEqualVulnID, v))
}

// EqualVulnIDNEQ applies the NEQ predicate on the "equal_vuln_id" field.
func EqualVulnIDNEQ(v uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNEQ(FieldEqualVulnID, v))
}

// EqualVulnIDIn applies the In predicate on the "equal_vuln_id" field.
func EqualVulnIDIn(vs ...uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldIn(FieldEqualVulnID, vs...))
}

// EqualVulnIDNotIn applies the NotIn predicate on the "equal_vuln_id" field.
func EqualVulnIDNotIn(vs ...uuid.UUID) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNotIn(FieldEqualVulnID, vs...))
}

// JustificationEQ applies the EQ predicate on the "justification" field.
func JustificationEQ(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldJustification, v))
}

// JustificationNEQ applies the NEQ predicate on the "justification" field.
func JustificationNEQ(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNEQ(FieldJustification, v))
}

// JustificationIn applies the In predicate on the "justification" field.
func JustificationIn(vs ...string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldIn(FieldJustification, vs...))
}

// JustificationNotIn applies the NotIn predicate on the "justification" field.
func JustificationNotIn(vs ...string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNotIn(FieldJustification, vs...))
}

// JustificationGT applies the GT predicate on the "justification" field.
func JustificationGT(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGT(FieldJustification, v))
}

// JustificationGTE applies the GTE predicate on the "justification" field.
func JustificationGTE(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGTE(FieldJustification, v))
}

// JustificationLT applies the LT predicate on the "justification" field.
func JustificationLT(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLT(FieldJustification, v))
}

// JustificationLTE applies the LTE predicate on the "justification" field.
func JustificationLTE(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLTE(FieldJustification, v))
}

// JustificationContains applies the Contains predicate on the "justification" field.
func JustificationContains(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldContains(FieldJustification, v))
}

// JustificationHasPrefix applies the HasPrefix predicate on the "justification" field.
func JustificationHasPrefix(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldHasPrefix(FieldJustification, v))
}

// JustificationHasSuffix applies the HasSuffix predicate on the "justification" field.
func JustificationHasSuffix(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldHasSuffix(FieldJustification, v))
}

// JustificationEqualFold applies the EqualFold predicate on the "justification" field.
func JustificationEqualFold(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEqualFold(FieldJustification, v))
}

// JustificationContainsFold applies the ContainsFold predicate on the "justification" field.
func JustificationContainsFold(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldContainsFold(FieldJustification, v))
}

// OriginEQ applies the EQ predicate on the "origin" field.
func OriginEQ(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldOrigin, v))
}

// OriginNEQ applies the NEQ predicate on the "origin" field.
func OriginNEQ(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNEQ(FieldOrigin, v))
}

// OriginIn applies the In predicate on the "origin" field.
func OriginIn(vs ...string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldIn(FieldOrigin, vs...))
}

// OriginNotIn applies the NotIn predicate on the "origin" field.
func OriginNotIn(vs ...string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNotIn(FieldOrigin, vs...))
}

// OriginGT applies the GT predicate on the "origin" field.
func OriginGT(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGT(FieldOrigin, v))
}

// OriginGTE applies the GTE predicate on the "origin" field.
func OriginGTE(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGTE(FieldOrigin, v))
}

// OriginLT applies the LT predicate on the "origin" field.
func OriginLT(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLT(FieldOrigin, v))
}

// OriginLTE applies the LTE predicate on the "origin" field.
func OriginLTE(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLTE(FieldOrigin, v))
}

// OriginContains applies the Contains predicate on the "origin" field.
func OriginContains(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldContains(FieldOrigin, v))
}

// OriginHasPrefix applies the HasPrefix predicate on the "origin" field.
func OriginHasPrefix(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldHasPrefix(FieldOrigin, v))
}

// OriginHasSuffix applies the HasSuffix predicate on the "origin" field.
func OriginHasSuffix(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldHasSuffix(FieldOrigin, v))
}

// OriginEqualFold applies the EqualFold predicate on the "origin" field.
func OriginEqualFold(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEqualFold(FieldOrigin, v))
}

// OriginContainsFold applies the ContainsFold predicate on the "origin" field.
func OriginContainsFold(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldContainsFold(FieldOrigin, v))
}

// CollectorEQ applies the EQ predicate on the "collector" field.
func CollectorEQ(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldCollector, v))
}

// CollectorNEQ applies the NEQ predicate on the "collector" field.
func CollectorNEQ(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNEQ(FieldCollector, v))
}

// CollectorIn applies the In predicate on the "collector" field.
func CollectorIn(vs ...string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldIn(FieldCollector, vs...))
}

// CollectorNotIn applies the NotIn predicate on the "collector" field.
func CollectorNotIn(vs ...string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNotIn(FieldCollector, vs...))
}

// CollectorGT applies the GT predicate on the "collector" field.
func CollectorGT(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGT(FieldCollector, v))
}

// CollectorGTE applies the GTE predicate on the "collector" field.
func CollectorGTE(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGTE(FieldCollector, v))
}

// CollectorLT applies the LT predicate on the "collector" field.
func CollectorLT(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLT(FieldCollector, v))
}

// CollectorLTE applies the LTE predicate on the "collector" field.
func CollectorLTE(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLTE(FieldCollector, v))
}

// CollectorContains applies the Contains predicate on the "collector" field.
func CollectorContains(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldContains(FieldCollector, v))
}

// CollectorHasPrefix applies the HasPrefix predicate on the "collector" field.
func CollectorHasPrefix(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldHasPrefix(FieldCollector, v))
}

// CollectorHasSuffix applies the HasSuffix predicate on the "collector" field.
func CollectorHasSuffix(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldHasSuffix(FieldCollector, v))
}

// CollectorEqualFold applies the EqualFold predicate on the "collector" field.
func CollectorEqualFold(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEqualFold(FieldCollector, v))
}

// CollectorContainsFold applies the ContainsFold predicate on the "collector" field.
func CollectorContainsFold(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldContainsFold(FieldCollector, v))
}

// VulnerabilitiesHashEQ applies the EQ predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashEQ(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEQ(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashNEQ applies the NEQ predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashNEQ(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNEQ(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashIn applies the In predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashIn(vs ...string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldIn(FieldVulnerabilitiesHash, vs...))
}

// VulnerabilitiesHashNotIn applies the NotIn predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashNotIn(vs ...string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldNotIn(FieldVulnerabilitiesHash, vs...))
}

// VulnerabilitiesHashGT applies the GT predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashGT(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGT(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashGTE applies the GTE predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashGTE(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldGTE(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashLT applies the LT predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashLT(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLT(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashLTE applies the LTE predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashLTE(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldLTE(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashContains applies the Contains predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashContains(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldContains(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashHasPrefix applies the HasPrefix predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashHasPrefix(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldHasPrefix(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashHasSuffix applies the HasSuffix predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashHasSuffix(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldHasSuffix(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashEqualFold applies the EqualFold predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashEqualFold(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldEqualFold(FieldVulnerabilitiesHash, v))
}

// VulnerabilitiesHashContainsFold applies the ContainsFold predicate on the "vulnerabilities_hash" field.
func VulnerabilitiesHashContainsFold(v string) predicate.VulnEqual {
	return predicate.VulnEqual(sql.FieldContainsFold(FieldVulnerabilitiesHash, v))
}

// HasVulnerabilityA applies the HasEdge predicate on the "vulnerability_a" edge.
func HasVulnerabilityA() predicate.VulnEqual {
	return predicate.VulnEqual(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, VulnerabilityATable, VulnerabilityAColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasVulnerabilityAWith applies the HasEdge predicate on the "vulnerability_a" edge with a given conditions (other predicates).
func HasVulnerabilityAWith(preds ...predicate.VulnerabilityID) predicate.VulnEqual {
	return predicate.VulnEqual(func(s *sql.Selector) {
		step := newVulnerabilityAStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasVulnerabilityB applies the HasEdge predicate on the "vulnerability_b" edge.
func HasVulnerabilityB() predicate.VulnEqual {
	return predicate.VulnEqual(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, VulnerabilityBTable, VulnerabilityBColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasVulnerabilityBWith applies the HasEdge predicate on the "vulnerability_b" edge with a given conditions (other predicates).
func HasVulnerabilityBWith(preds ...predicate.VulnerabilityID) predicate.VulnEqual {
	return predicate.VulnEqual(func(s *sql.Selector) {
		step := newVulnerabilityBStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.VulnEqual) predicate.VulnEqual {
	return predicate.VulnEqual(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.VulnEqual) predicate.VulnEqual {
	return predicate.VulnEqual(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.VulnEqual) predicate.VulnEqual {
	return predicate.VulnEqual(sql.NotPredicates(p))
}
