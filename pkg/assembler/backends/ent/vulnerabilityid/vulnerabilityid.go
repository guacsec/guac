// Code generated by ent, DO NOT EDIT.

package vulnerabilityid

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

const (
	// Label holds the string label denoting the vulnerabilityid type in the database.
	Label = "vulnerability_id"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVulnerabilityID holds the string denoting the vulnerability_id field in the database.
	FieldVulnerabilityID = "vulnerability_id"
	// FieldTypeID holds the string denoting the type_id field in the database.
	FieldTypeID = "type_id"
	// EdgeType holds the string denoting the type edge name in mutations.
	EdgeType = "type"
	// Table holds the table name of the vulnerabilityid in the database.
	Table = "vulnerability_ids"
	// TypeTable is the table that holds the type relation/edge.
	TypeTable = "vulnerability_ids"
	// TypeInverseTable is the table name for the VulnerabilityType entity.
	// It exists in this package in order to avoid circular dependency with the "vulnerabilitytype" package.
	TypeInverseTable = "vulnerability_types"
	// TypeColumn is the table column denoting the type relation/edge.
	TypeColumn = "type_id"
)

// Columns holds all SQL columns for vulnerabilityid fields.
var Columns = []string{
	FieldID,
	FieldVulnerabilityID,
	FieldTypeID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// VulnerabilityIDValidator is a validator for the "vulnerability_id" field. It is called by the builders before save.
	VulnerabilityIDValidator func(string) error
)

// OrderOption defines the ordering options for the VulnerabilityID queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByVulnerabilityID orders the results by the vulnerability_id field.
func ByVulnerabilityID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVulnerabilityID, opts...).ToFunc()
}

// ByTypeID orders the results by the type_id field.
func ByTypeID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTypeID, opts...).ToFunc()
}

// ByTypeField orders the results by type field.
func ByTypeField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newTypeStep(), sql.OrderByField(field, opts...))
	}
}
func newTypeStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(TypeInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2O, true, TypeTable, TypeColumn),
	)
}
