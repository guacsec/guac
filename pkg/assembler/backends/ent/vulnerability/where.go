// Code generated by ent, DO NOT EDIT.

package vulnerability

import (
	"entgo.io/ent/dialect/sql"
	"github.com/guacsec/guac/pkg/assembler/backends/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldID, id))
}

// GhsaID applies equality check predicate on the "ghsa_id" field. It's identical to GhsaIDEQ.
func GhsaID(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldGhsaID, v))
}

// CveID applies equality check predicate on the "cve_id" field. It's identical to CveIDEQ.
func CveID(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldCveID, v))
}

// CveYear applies equality check predicate on the "cve_year" field. It's identical to CveYearEQ.
func CveYear(v int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldCveYear, v))
}

// OsvID applies equality check predicate on the "osv_id" field. It's identical to OsvIDEQ.
func OsvID(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldOsvID, v))
}

// GhsaIDEQ applies the EQ predicate on the "ghsa_id" field.
func GhsaIDEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldGhsaID, v))
}

// GhsaIDNEQ applies the NEQ predicate on the "ghsa_id" field.
func GhsaIDNEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldGhsaID, v))
}

// GhsaIDIn applies the In predicate on the "ghsa_id" field.
func GhsaIDIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldGhsaID, vs...))
}

// GhsaIDNotIn applies the NotIn predicate on the "ghsa_id" field.
func GhsaIDNotIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldGhsaID, vs...))
}

// GhsaIDGT applies the GT predicate on the "ghsa_id" field.
func GhsaIDGT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldGhsaID, v))
}

// GhsaIDGTE applies the GTE predicate on the "ghsa_id" field.
func GhsaIDGTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldGhsaID, v))
}

// GhsaIDLT applies the LT predicate on the "ghsa_id" field.
func GhsaIDLT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldGhsaID, v))
}

// GhsaIDLTE applies the LTE predicate on the "ghsa_id" field.
func GhsaIDLTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldGhsaID, v))
}

// GhsaIDContains applies the Contains predicate on the "ghsa_id" field.
func GhsaIDContains(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContains(FieldGhsaID, v))
}

// GhsaIDHasPrefix applies the HasPrefix predicate on the "ghsa_id" field.
func GhsaIDHasPrefix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasPrefix(FieldGhsaID, v))
}

// GhsaIDHasSuffix applies the HasSuffix predicate on the "ghsa_id" field.
func GhsaIDHasSuffix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasSuffix(FieldGhsaID, v))
}

// GhsaIDIsNil applies the IsNil predicate on the "ghsa_id" field.
func GhsaIDIsNil() predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIsNull(FieldGhsaID))
}

// GhsaIDNotNil applies the NotNil predicate on the "ghsa_id" field.
func GhsaIDNotNil() predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotNull(FieldGhsaID))
}

// GhsaIDEqualFold applies the EqualFold predicate on the "ghsa_id" field.
func GhsaIDEqualFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEqualFold(FieldGhsaID, v))
}

// GhsaIDContainsFold applies the ContainsFold predicate on the "ghsa_id" field.
func GhsaIDContainsFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContainsFold(FieldGhsaID, v))
}

// CveIDEQ applies the EQ predicate on the "cve_id" field.
func CveIDEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldCveID, v))
}

// CveIDNEQ applies the NEQ predicate on the "cve_id" field.
func CveIDNEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldCveID, v))
}

// CveIDIn applies the In predicate on the "cve_id" field.
func CveIDIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldCveID, vs...))
}

// CveIDNotIn applies the NotIn predicate on the "cve_id" field.
func CveIDNotIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldCveID, vs...))
}

// CveIDGT applies the GT predicate on the "cve_id" field.
func CveIDGT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldCveID, v))
}

// CveIDGTE applies the GTE predicate on the "cve_id" field.
func CveIDGTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldCveID, v))
}

// CveIDLT applies the LT predicate on the "cve_id" field.
func CveIDLT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldCveID, v))
}

// CveIDLTE applies the LTE predicate on the "cve_id" field.
func CveIDLTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldCveID, v))
}

// CveIDContains applies the Contains predicate on the "cve_id" field.
func CveIDContains(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContains(FieldCveID, v))
}

// CveIDHasPrefix applies the HasPrefix predicate on the "cve_id" field.
func CveIDHasPrefix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasPrefix(FieldCveID, v))
}

// CveIDHasSuffix applies the HasSuffix predicate on the "cve_id" field.
func CveIDHasSuffix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasSuffix(FieldCveID, v))
}

// CveIDIsNil applies the IsNil predicate on the "cve_id" field.
func CveIDIsNil() predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIsNull(FieldCveID))
}

// CveIDNotNil applies the NotNil predicate on the "cve_id" field.
func CveIDNotNil() predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotNull(FieldCveID))
}

// CveIDEqualFold applies the EqualFold predicate on the "cve_id" field.
func CveIDEqualFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEqualFold(FieldCveID, v))
}

// CveIDContainsFold applies the ContainsFold predicate on the "cve_id" field.
func CveIDContainsFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContainsFold(FieldCveID, v))
}

// CveYearEQ applies the EQ predicate on the "cve_year" field.
func CveYearEQ(v int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldCveYear, v))
}

// CveYearNEQ applies the NEQ predicate on the "cve_year" field.
func CveYearNEQ(v int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldCveYear, v))
}

// CveYearIn applies the In predicate on the "cve_year" field.
func CveYearIn(vs ...int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldCveYear, vs...))
}

// CveYearNotIn applies the NotIn predicate on the "cve_year" field.
func CveYearNotIn(vs ...int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldCveYear, vs...))
}

// CveYearGT applies the GT predicate on the "cve_year" field.
func CveYearGT(v int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldCveYear, v))
}

// CveYearGTE applies the GTE predicate on the "cve_year" field.
func CveYearGTE(v int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldCveYear, v))
}

// CveYearLT applies the LT predicate on the "cve_year" field.
func CveYearLT(v int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldCveYear, v))
}

// CveYearLTE applies the LTE predicate on the "cve_year" field.
func CveYearLTE(v int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldCveYear, v))
}

// CveYearIsNil applies the IsNil predicate on the "cve_year" field.
func CveYearIsNil() predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIsNull(FieldCveYear))
}

// CveYearNotNil applies the NotNil predicate on the "cve_year" field.
func CveYearNotNil() predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotNull(FieldCveYear))
}

// OsvIDEQ applies the EQ predicate on the "osv_id" field.
func OsvIDEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldOsvID, v))
}

// OsvIDNEQ applies the NEQ predicate on the "osv_id" field.
func OsvIDNEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldOsvID, v))
}

// OsvIDIn applies the In predicate on the "osv_id" field.
func OsvIDIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldOsvID, vs...))
}

// OsvIDNotIn applies the NotIn predicate on the "osv_id" field.
func OsvIDNotIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldOsvID, vs...))
}

// OsvIDGT applies the GT predicate on the "osv_id" field.
func OsvIDGT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldOsvID, v))
}

// OsvIDGTE applies the GTE predicate on the "osv_id" field.
func OsvIDGTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldOsvID, v))
}

// OsvIDLT applies the LT predicate on the "osv_id" field.
func OsvIDLT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldOsvID, v))
}

// OsvIDLTE applies the LTE predicate on the "osv_id" field.
func OsvIDLTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldOsvID, v))
}

// OsvIDContains applies the Contains predicate on the "osv_id" field.
func OsvIDContains(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContains(FieldOsvID, v))
}

// OsvIDHasPrefix applies the HasPrefix predicate on the "osv_id" field.
func OsvIDHasPrefix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasPrefix(FieldOsvID, v))
}

// OsvIDHasSuffix applies the HasSuffix predicate on the "osv_id" field.
func OsvIDHasSuffix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasSuffix(FieldOsvID, v))
}

// OsvIDIsNil applies the IsNil predicate on the "osv_id" field.
func OsvIDIsNil() predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIsNull(FieldOsvID))
}

// OsvIDNotNil applies the NotNil predicate on the "osv_id" field.
func OsvIDNotNil() predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotNull(FieldOsvID))
}

// OsvIDEqualFold applies the EqualFold predicate on the "osv_id" field.
func OsvIDEqualFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEqualFold(FieldOsvID, v))
}

// OsvIDContainsFold applies the ContainsFold predicate on the "osv_id" field.
func OsvIDContainsFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContainsFold(FieldOsvID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Vulnerability) predicate.Vulnerability {
	return predicate.Vulnerability(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Vulnerability) predicate.Vulnerability {
	return predicate.Vulnerability(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Vulnerability) predicate.Vulnerability {
	return predicate.Vulnerability(sql.NotPredicates(p))
}
