// Code generated by ent, DO NOT EDIT.

package billofmaterials

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/guacsec/guac/pkg/assembler/backends/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLTE(FieldID, id))
}

// PackageID applies equality check predicate on the "package_id" field. It's identical to PackageIDEQ.
func PackageID(v int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldPackageID, v))
}

// ArtifactID applies equality check predicate on the "artifact_id" field. It's identical to ArtifactIDEQ.
func ArtifactID(v int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldArtifactID, v))
}

// URI applies equality check predicate on the "uri" field. It's identical to URIEQ.
func URI(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldURI, v))
}

// Algorithm applies equality check predicate on the "algorithm" field. It's identical to AlgorithmEQ.
func Algorithm(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldAlgorithm, v))
}

// Digest applies equality check predicate on the "digest" field. It's identical to DigestEQ.
func Digest(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldDigest, v))
}

// DownloadLocation applies equality check predicate on the "download_location" field. It's identical to DownloadLocationEQ.
func DownloadLocation(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldDownloadLocation, v))
}

// Origin applies equality check predicate on the "origin" field. It's identical to OriginEQ.
func Origin(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldOrigin, v))
}

// Collector applies equality check predicate on the "collector" field. It's identical to CollectorEQ.
func Collector(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldCollector, v))
}

// KnownSince applies equality check predicate on the "known_since" field. It's identical to KnownSinceEQ.
func KnownSince(v time.Time) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldKnownSince, v))
}

// PackageIDEQ applies the EQ predicate on the "package_id" field.
func PackageIDEQ(v int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldPackageID, v))
}

// PackageIDNEQ applies the NEQ predicate on the "package_id" field.
func PackageIDNEQ(v int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldPackageID, v))
}

// PackageIDIn applies the In predicate on the "package_id" field.
func PackageIDIn(vs ...int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldPackageID, vs...))
}

// PackageIDNotIn applies the NotIn predicate on the "package_id" field.
func PackageIDNotIn(vs ...int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldPackageID, vs...))
}

// PackageIDIsNil applies the IsNil predicate on the "package_id" field.
func PackageIDIsNil() predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIsNull(FieldPackageID))
}

// PackageIDNotNil applies the NotNil predicate on the "package_id" field.
func PackageIDNotNil() predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotNull(FieldPackageID))
}

// ArtifactIDEQ applies the EQ predicate on the "artifact_id" field.
func ArtifactIDEQ(v int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldArtifactID, v))
}

// ArtifactIDNEQ applies the NEQ predicate on the "artifact_id" field.
func ArtifactIDNEQ(v int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldArtifactID, v))
}

// ArtifactIDIn applies the In predicate on the "artifact_id" field.
func ArtifactIDIn(vs ...int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldArtifactID, vs...))
}

// ArtifactIDNotIn applies the NotIn predicate on the "artifact_id" field.
func ArtifactIDNotIn(vs ...int) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldArtifactID, vs...))
}

// ArtifactIDIsNil applies the IsNil predicate on the "artifact_id" field.
func ArtifactIDIsNil() predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIsNull(FieldArtifactID))
}

// ArtifactIDNotNil applies the NotNil predicate on the "artifact_id" field.
func ArtifactIDNotNil() predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotNull(FieldArtifactID))
}

// URIEQ applies the EQ predicate on the "uri" field.
func URIEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldURI, v))
}

// URINEQ applies the NEQ predicate on the "uri" field.
func URINEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldURI, v))
}

// URIIn applies the In predicate on the "uri" field.
func URIIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldURI, vs...))
}

// URINotIn applies the NotIn predicate on the "uri" field.
func URINotIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldURI, vs...))
}

// URIGT applies the GT predicate on the "uri" field.
func URIGT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGT(FieldURI, v))
}

// URIGTE applies the GTE predicate on the "uri" field.
func URIGTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGTE(FieldURI, v))
}

// URILT applies the LT predicate on the "uri" field.
func URILT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLT(FieldURI, v))
}

// URILTE applies the LTE predicate on the "uri" field.
func URILTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLTE(FieldURI, v))
}

// URIContains applies the Contains predicate on the "uri" field.
func URIContains(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContains(FieldURI, v))
}

// URIHasPrefix applies the HasPrefix predicate on the "uri" field.
func URIHasPrefix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasPrefix(FieldURI, v))
}

// URIHasSuffix applies the HasSuffix predicate on the "uri" field.
func URIHasSuffix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasSuffix(FieldURI, v))
}

// URIEqualFold applies the EqualFold predicate on the "uri" field.
func URIEqualFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEqualFold(FieldURI, v))
}

// URIContainsFold applies the ContainsFold predicate on the "uri" field.
func URIContainsFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContainsFold(FieldURI, v))
}

// AlgorithmEQ applies the EQ predicate on the "algorithm" field.
func AlgorithmEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldAlgorithm, v))
}

// AlgorithmNEQ applies the NEQ predicate on the "algorithm" field.
func AlgorithmNEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldAlgorithm, v))
}

// AlgorithmIn applies the In predicate on the "algorithm" field.
func AlgorithmIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldAlgorithm, vs...))
}

// AlgorithmNotIn applies the NotIn predicate on the "algorithm" field.
func AlgorithmNotIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldAlgorithm, vs...))
}

// AlgorithmGT applies the GT predicate on the "algorithm" field.
func AlgorithmGT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGT(FieldAlgorithm, v))
}

// AlgorithmGTE applies the GTE predicate on the "algorithm" field.
func AlgorithmGTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGTE(FieldAlgorithm, v))
}

// AlgorithmLT applies the LT predicate on the "algorithm" field.
func AlgorithmLT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLT(FieldAlgorithm, v))
}

// AlgorithmLTE applies the LTE predicate on the "algorithm" field.
func AlgorithmLTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLTE(FieldAlgorithm, v))
}

// AlgorithmContains applies the Contains predicate on the "algorithm" field.
func AlgorithmContains(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContains(FieldAlgorithm, v))
}

// AlgorithmHasPrefix applies the HasPrefix predicate on the "algorithm" field.
func AlgorithmHasPrefix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasPrefix(FieldAlgorithm, v))
}

// AlgorithmHasSuffix applies the HasSuffix predicate on the "algorithm" field.
func AlgorithmHasSuffix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasSuffix(FieldAlgorithm, v))
}

// AlgorithmEqualFold applies the EqualFold predicate on the "algorithm" field.
func AlgorithmEqualFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEqualFold(FieldAlgorithm, v))
}

// AlgorithmContainsFold applies the ContainsFold predicate on the "algorithm" field.
func AlgorithmContainsFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContainsFold(FieldAlgorithm, v))
}

// DigestEQ applies the EQ predicate on the "digest" field.
func DigestEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldDigest, v))
}

// DigestNEQ applies the NEQ predicate on the "digest" field.
func DigestNEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldDigest, v))
}

// DigestIn applies the In predicate on the "digest" field.
func DigestIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldDigest, vs...))
}

// DigestNotIn applies the NotIn predicate on the "digest" field.
func DigestNotIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldDigest, vs...))
}

// DigestGT applies the GT predicate on the "digest" field.
func DigestGT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGT(FieldDigest, v))
}

// DigestGTE applies the GTE predicate on the "digest" field.
func DigestGTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGTE(FieldDigest, v))
}

// DigestLT applies the LT predicate on the "digest" field.
func DigestLT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLT(FieldDigest, v))
}

// DigestLTE applies the LTE predicate on the "digest" field.
func DigestLTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLTE(FieldDigest, v))
}

// DigestContains applies the Contains predicate on the "digest" field.
func DigestContains(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContains(FieldDigest, v))
}

// DigestHasPrefix applies the HasPrefix predicate on the "digest" field.
func DigestHasPrefix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasPrefix(FieldDigest, v))
}

// DigestHasSuffix applies the HasSuffix predicate on the "digest" field.
func DigestHasSuffix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasSuffix(FieldDigest, v))
}

// DigestEqualFold applies the EqualFold predicate on the "digest" field.
func DigestEqualFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEqualFold(FieldDigest, v))
}

// DigestContainsFold applies the ContainsFold predicate on the "digest" field.
func DigestContainsFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContainsFold(FieldDigest, v))
}

// DownloadLocationEQ applies the EQ predicate on the "download_location" field.
func DownloadLocationEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldDownloadLocation, v))
}

// DownloadLocationNEQ applies the NEQ predicate on the "download_location" field.
func DownloadLocationNEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldDownloadLocation, v))
}

// DownloadLocationIn applies the In predicate on the "download_location" field.
func DownloadLocationIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldDownloadLocation, vs...))
}

// DownloadLocationNotIn applies the NotIn predicate on the "download_location" field.
func DownloadLocationNotIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldDownloadLocation, vs...))
}

// DownloadLocationGT applies the GT predicate on the "download_location" field.
func DownloadLocationGT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGT(FieldDownloadLocation, v))
}

// DownloadLocationGTE applies the GTE predicate on the "download_location" field.
func DownloadLocationGTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGTE(FieldDownloadLocation, v))
}

// DownloadLocationLT applies the LT predicate on the "download_location" field.
func DownloadLocationLT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLT(FieldDownloadLocation, v))
}

// DownloadLocationLTE applies the LTE predicate on the "download_location" field.
func DownloadLocationLTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLTE(FieldDownloadLocation, v))
}

// DownloadLocationContains applies the Contains predicate on the "download_location" field.
func DownloadLocationContains(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContains(FieldDownloadLocation, v))
}

// DownloadLocationHasPrefix applies the HasPrefix predicate on the "download_location" field.
func DownloadLocationHasPrefix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasPrefix(FieldDownloadLocation, v))
}

// DownloadLocationHasSuffix applies the HasSuffix predicate on the "download_location" field.
func DownloadLocationHasSuffix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasSuffix(FieldDownloadLocation, v))
}

// DownloadLocationEqualFold applies the EqualFold predicate on the "download_location" field.
func DownloadLocationEqualFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEqualFold(FieldDownloadLocation, v))
}

// DownloadLocationContainsFold applies the ContainsFold predicate on the "download_location" field.
func DownloadLocationContainsFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContainsFold(FieldDownloadLocation, v))
}

// OriginEQ applies the EQ predicate on the "origin" field.
func OriginEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldOrigin, v))
}

// OriginNEQ applies the NEQ predicate on the "origin" field.
func OriginNEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldOrigin, v))
}

// OriginIn applies the In predicate on the "origin" field.
func OriginIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldOrigin, vs...))
}

// OriginNotIn applies the NotIn predicate on the "origin" field.
func OriginNotIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldOrigin, vs...))
}

// OriginGT applies the GT predicate on the "origin" field.
func OriginGT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGT(FieldOrigin, v))
}

// OriginGTE applies the GTE predicate on the "origin" field.
func OriginGTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGTE(FieldOrigin, v))
}

// OriginLT applies the LT predicate on the "origin" field.
func OriginLT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLT(FieldOrigin, v))
}

// OriginLTE applies the LTE predicate on the "origin" field.
func OriginLTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLTE(FieldOrigin, v))
}

// OriginContains applies the Contains predicate on the "origin" field.
func OriginContains(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContains(FieldOrigin, v))
}

// OriginHasPrefix applies the HasPrefix predicate on the "origin" field.
func OriginHasPrefix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasPrefix(FieldOrigin, v))
}

// OriginHasSuffix applies the HasSuffix predicate on the "origin" field.
func OriginHasSuffix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasSuffix(FieldOrigin, v))
}

// OriginEqualFold applies the EqualFold predicate on the "origin" field.
func OriginEqualFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEqualFold(FieldOrigin, v))
}

// OriginContainsFold applies the ContainsFold predicate on the "origin" field.
func OriginContainsFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContainsFold(FieldOrigin, v))
}

// CollectorEQ applies the EQ predicate on the "collector" field.
func CollectorEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldCollector, v))
}

// CollectorNEQ applies the NEQ predicate on the "collector" field.
func CollectorNEQ(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldCollector, v))
}

// CollectorIn applies the In predicate on the "collector" field.
func CollectorIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldCollector, vs...))
}

// CollectorNotIn applies the NotIn predicate on the "collector" field.
func CollectorNotIn(vs ...string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldCollector, vs...))
}

// CollectorGT applies the GT predicate on the "collector" field.
func CollectorGT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGT(FieldCollector, v))
}

// CollectorGTE applies the GTE predicate on the "collector" field.
func CollectorGTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGTE(FieldCollector, v))
}

// CollectorLT applies the LT predicate on the "collector" field.
func CollectorLT(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLT(FieldCollector, v))
}

// CollectorLTE applies the LTE predicate on the "collector" field.
func CollectorLTE(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLTE(FieldCollector, v))
}

// CollectorContains applies the Contains predicate on the "collector" field.
func CollectorContains(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContains(FieldCollector, v))
}

// CollectorHasPrefix applies the HasPrefix predicate on the "collector" field.
func CollectorHasPrefix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasPrefix(FieldCollector, v))
}

// CollectorHasSuffix applies the HasSuffix predicate on the "collector" field.
func CollectorHasSuffix(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldHasSuffix(FieldCollector, v))
}

// CollectorEqualFold applies the EqualFold predicate on the "collector" field.
func CollectorEqualFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEqualFold(FieldCollector, v))
}

// CollectorContainsFold applies the ContainsFold predicate on the "collector" field.
func CollectorContainsFold(v string) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldContainsFold(FieldCollector, v))
}

// KnownSinceEQ applies the EQ predicate on the "known_since" field.
func KnownSinceEQ(v time.Time) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldEQ(FieldKnownSince, v))
}

// KnownSinceNEQ applies the NEQ predicate on the "known_since" field.
func KnownSinceNEQ(v time.Time) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNEQ(FieldKnownSince, v))
}

// KnownSinceIn applies the In predicate on the "known_since" field.
func KnownSinceIn(vs ...time.Time) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldIn(FieldKnownSince, vs...))
}

// KnownSinceNotIn applies the NotIn predicate on the "known_since" field.
func KnownSinceNotIn(vs ...time.Time) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldNotIn(FieldKnownSince, vs...))
}

// KnownSinceGT applies the GT predicate on the "known_since" field.
func KnownSinceGT(v time.Time) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGT(FieldKnownSince, v))
}

// KnownSinceGTE applies the GTE predicate on the "known_since" field.
func KnownSinceGTE(v time.Time) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldGTE(FieldKnownSince, v))
}

// KnownSinceLT applies the LT predicate on the "known_since" field.
func KnownSinceLT(v time.Time) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLT(FieldKnownSince, v))
}

// KnownSinceLTE applies the LTE predicate on the "known_since" field.
func KnownSinceLTE(v time.Time) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.FieldLTE(FieldKnownSince, v))
}

// HasPackage applies the HasEdge predicate on the "package" edge.
func HasPackage() predicate.BillOfMaterials {
	return predicate.BillOfMaterials(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, PackageTable, PackageColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPackageWith applies the HasEdge predicate on the "package" edge with a given conditions (other predicates).
func HasPackageWith(preds ...predicate.PackageVersion) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(func(s *sql.Selector) {
		step := newPackageStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasArtifact applies the HasEdge predicate on the "artifact" edge.
func HasArtifact() predicate.BillOfMaterials {
	return predicate.BillOfMaterials(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, ArtifactTable, ArtifactColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasArtifactWith applies the HasEdge predicate on the "artifact" edge with a given conditions (other predicates).
func HasArtifactWith(preds ...predicate.Artifact) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(func(s *sql.Selector) {
		step := newArtifactStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.BillOfMaterials) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.BillOfMaterials) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.BillOfMaterials) predicate.BillOfMaterials {
	return predicate.BillOfMaterials(sql.NotPredicates(p))
}
