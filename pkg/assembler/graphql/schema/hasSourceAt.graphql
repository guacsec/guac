#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for the HasSourceAt. It contains the package object, source object, since (timestamp), justification, origin and collector.
"""
HasSourceAt is an attestation represents that a package object has a source object since a timestamp

package (subject) - the package object type that represents the package
source (object) - the source object type that represents the source
knownSince (property) - timestamp when this was last checked (exact time)
justification (property) - string value representing why the package has a source specified
origin (property) - where this attestation was generated from (based on which document)
collector (property) - the GUAC collector that collected the document that generated this attestation
"""
type HasSourceAt {
  id: ID!
  package: Package!
  source: Source!
  knownSince: Time!
  justification: String!
  origin: String!
  collector: String!
}

"""
HasSourceAtSpec allows filtering the list of HasSourceAt to return.
"""
input HasSourceAtSpec {
  id: ID
  package: PkgSpec
  source: SourceSpec
  knownSince: Time
  justification: String
  origin: String
  collector: String
}

"""
HasSourceAtInputSpec is the same as HasSourceAt but for mutation input.

All fields are required.
"""
input HasSourceAtInputSpec {
  knownSince: Time!
  justification: String!
  origin: String!
  collector: String!
}


extend type Query {
  "Returns all HasSourceAt"
  HasSourceAt(hasSourceAtSpec: HasSourceAtSpec): [HasSourceAt!]!
}

extend type Mutation {
  "Adds a certification that a package (either at the version level or package name level) is associated with the source"
  ingestHasSourceAt(pkg: PkgInputSpec!, pkgMatchType: MatchFlags!, source: SourceInputSpec!, hasSourceAt: HasSourceAtInputSpec!): HasSourceAt!
}
