#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for the builder

"""
Builder represents the builder (e.g., FRSCA or GitHub Actions).

Currently builders are identified by the uri field.
"""
type Builder {
  id: ID!
  uri: String!
}

"BuilderSpec allows filtering the list of builders to return in a query."
input BuilderSpec {
  id: ID
  uri: String
}

"BuilderInputSpec specifies a builder for mutations."
input BuilderInputSpec {
  uri: String!
}

"""
IDorBuilderInput allows for specifying either the builder ID or the BuilderInputSpec.

Either the ID or the BuilderInputSpec must be specified. Both cannot be nil.

If the ID is specified, the BuilderInputSpec is not used.
"""
input IDorBuilderInput {
  builderID: ID
  builderInput: BuilderInputSpec
}

"""
BuilderConnection returns the paginated results for builder.

totalCount is the total number of results returned.

pageInfo provides information to the client if there is
a next page of results and the starting and
ending cursor for the current set.

edges contains the BuilderEdge which contains the current cursor
and the Builder node itself
"""
type BuilderConnection {
    totalCount: Int!
    pageInfo: PageInfo!
    edges: [BuilderEdge!]!
}

"""
BuilderEdge contains the cursor for the resulting node and
the Builder node itself.
"""
type BuilderEdge {
  cursor: ID!
  node: Builder!
}

extend type Query {
  "Returns all builders matching a filter."
  builders(builderSpec: BuilderSpec!): [Builder!]!
  "Returns a paginated results via BuilderConnection"
  buildersList(builderSpec: BuilderSpec!, after: ID, first: Int): BuilderConnection
}

extend type Mutation {
  "Ingests a new builder and returns it."
  ingestBuilder(builder: IDorBuilderInput): ID!
  "Bulk ingests new builders and returns a list of them. The returned array of IDs must be in the same order as the inputs."
  ingestBuilders(builders: [IDorBuilderInput!]!): [ID!]!
}
