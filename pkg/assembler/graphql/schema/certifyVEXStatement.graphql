#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for the CertifyVEXStatement. It contains a subject which can be a package or artifact object, vulnerability that can be of type
# cve or ghsa, justification, origin and collector

"""
PackageOrArtifact is a union of Package and Artifact. Any of these objects can be specified
"""
union PackageOrArtifact = Package | Artifact

"""
PackageOrArtifactSpec allows using PackageOrArtifact union as
input type to be used in read queries.
Exactly one of the value must be set to non-nil.
"""
input PackageOrArtifactSpec {
  package: PkgSpec
  artifact: ArtifactSpec
}

"""
CertifyVEXStatement is an attestation that represents when a package or artifact has a VEX about a specific vulnerability (CVE or GHSA)

subject - union type that represents a package or artifact
vulnerability (object) - union type that consists of cve or ghsa
justification (property) - justification for VEX
knownSince (property) - timestamp of the VEX (exact time in RFC 3339 format)
origin (property) - where this attestation was generated from (based on which document)
collector (property) - the GUAC collector that collected the document that generated this attestation
"""
type CertifyVEXStatement {
  subject: PackageOrArtifact!
  vulnerability: CveOrGhsa!
  justification: String!
  knownSince: Time!
  origin: String!
  collector: String!
}

"""
CertifyVEXStatementSpec allows filtering the list of CertifyVEXStatement to return.
Only package or artifact and CVE or GHSA can be specified at once.
"""
input CertifyVEXStatementSpec {
  subject: PackageOrArtifactSpec
  vulnerability: CveOrGhsaSpec
  justification: String
  knownSince: Time
  origin: String
  collector: String
}

"""
VexStatementInputSpec is the same as CertifyVEXStatement but for mutation input.

All fields are required.
"""
input VexStatementInputSpec {
  justification: String!
  knownSince: Time!
  origin: String!
  collector: String!
}

"""
PackageOrArtifactInput allows using PackageOrArtifact union as
input type to be used in mutations.
Exactly one of the value must be set to non-nil.
"""
input PackageOrArtifactInput {
  package: PkgInputSpec
  artifact: ArtifactInputSpec
}

extend type Query {
  "Returns all CertifyVEXStatement"
  CertifyVEXStatement(certifyVEXStatementSpec: CertifyVEXStatementSpec): [CertifyVEXStatement!]!
}

extend type Mutation {
  "certify that an either a package or artifact has an associated VEX for a CVE or GHSA"
  ingestVEXStatement(subject: PackageOrArtifactInput!, vulnerability: CveOrGhsaInput!, vexStatement: VexStatementInputSpec!): CertifyVEXStatement!
}
