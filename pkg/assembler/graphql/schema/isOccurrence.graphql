#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for the IsOccurrence. It contains the subject (which can be either a package or source),
#  occurrenceArtifact, justification,  origin of the attestation, and collector
"""
IsOccurrence is an attestation represents when either a package or source is represented by an artifact

subject - union type that can be either a package or source object type
occurrenceArtifact (object) - artifact that represent the the package or source
justification (property) - string value representing why the package or source is represented by the specified artifact
origin (property) - where this attestation was generated from (based on which document)
collector (property) - the GUAC collector that collected the document that generated this attestation

Note: Package or Source must be specified but not both at the same time.
Attestation must occur at the PackageName or the PackageVersion or at the SourceName.

HashEqual will be used to connect together two artifacts if a package or source 
is represented by more than one artifact.

IsOccurrence does not connect a package with a source. 
HasSourceAt attestation will be used to connect a package with a source
"""
type IsOccurrence {
  subject: PkgSrcObject!
  occurrenceArtifact: Artifact!
  justification: String!
  origin: String!
  collector: String!
}

"""
IsOccurrenceSpec allows filtering the list of IsOccurrence to return.
Note: Package or Source must be specified but not both at the same time
For package - a PackageName or PackageVersion must be specified (name or name, version, qualifiers and subpath)
For source - a SourceName must be specified (name, tag or commit)
"""
input IsOccurrenceSpec {
  package: PkgSpec
  source: SourceSpec
  artifact: ArtifactSpec
  justification: String
  origin: String
  collector: String
}


extend type Query {
  "Returns all IsOccurrence"
  IsOccurrence(isOccurrenceSpec: IsOccurrenceSpec): [IsOccurrence!]!
}
