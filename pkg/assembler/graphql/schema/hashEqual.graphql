#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for the artifact equality

"HashEqual is an attestation that a set of artifacts are identical."
type HashEqual {
  id: ID!
  "Collection of artifacts that are similar"
  artifacts: [Artifact!]!
  "Justification for the claim that the artifacts are similar"
  justification: String!
  "Document from which this attestation is generated from"
  origin: String!
  "GUAC collector for the document"
  collector: String!
}

"""
HashEqualSpec allows filtering the list of artifact equality statements to
return in a query.

Specifying just one artifact allows to query for all similar artifacts (if any
exists).
"""
input HashEqualSpec {
  id: ID
  artifacts: [ArtifactSpec]
  justification: String
  origin: String
  collector: String
}


"HashEqualInputSpec represents the input to certify that packages are similar."
input HashEqualInputSpec {
  justification: String!
  origin: String!
  collector: String!
}


extend type Query {
  "Returns all artifact equality statements matching a filter."
  HashEqual(hashEqualSpec: HashEqualSpec): [HashEqual!]!
}

extend type Mutation {
  "Adds a certification that two artifacts are similar."
  ingestHashEqual(artifact: ArtifactInputSpec!, otherArtifact: ArtifactInputSpec!, hashEqual: HashEqualInputSpec!): HashEqual!
}
