#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for advanced queries over all GUAC nodes

"""
Node is a union type of all the possible nodes.

It encapsulates the software tree nodes along with the evidence nodes. In a
path query, all connecting evidence nodes along with their intermediate subject
nodes need to be returned in order to create a complete graph.
"""
union Node
  = Package
  | Source
  | Artifact
  | Builder
  | OSV
  | CVE
  | GHSA
  | NoVuln
  | IsOccurrence
  | IsDependency
  | IsVulnerability
  | CertifyVEXStatement
  | HashEqual
  | CertifyBad
  | CertifyGood
  | PkgEqual
  | CertifyScorecard
  | CertifyVuln
  | HasSourceAt
  | HasSBOM
  | HasSLSA

extend type Query {
  """
  path query returns a path between subject and target, of a maximum length

  Since we want to uniquely identify endpoints, nodes must be specified by
  valid IDs only (instead of using filters/input spec structs).
  """
  path(subject: ID!, target: ID!, maxPathLength: Int!): [Node!]!

  """
  neighbors returns all the direct neighbors of a node

  Similarly, the input is only specified by its ID.
  """
  neighbors(node: ID!): [Node!]!

  """
  node returns a single node, regardless of type

  The input is only specified by its ID.
  """
  node(node: ID!): Node!
}
