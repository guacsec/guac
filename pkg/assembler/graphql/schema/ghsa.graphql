#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for the GitHub Security Advisory (GSHA) trie/tree.
# It contains the ID associated with a vulnerability in the GitHub numbering
# schema (GHSA ID).

"""
GHSA represents GitHub security advisories.

We create a separate node to allow retrieving all GHSAs.
"""
type GHSA {
  ghsaId: [GHSAId!]!
}

"""
GHSAId is the actual ID that is given to a specific vulnerability on GitHub

The `id` field is mandatory and canonicalized to be lowercase.

This node can be referred to by other parts of GUAC.
"""
type GHSAId {
  id: String!
}

"""
GHSASpec allows filtering the list of GHSA to return.

The argument will be canonicalized to lowercase.
"""
input GHSASpec {
  ghsaId: String
}

"""
GHSAInputSpec is the same as GHSASpec, but used for mutation ingestion.
"""
input GHSAInputSpec {
  ghsaId: String!
}

extend type Query {
  "Returns all GHSA nodes"
  ghsa(ghsaSpec: GHSASpec): [GHSA!]!
}

extend type Mutation {
  "Ingest a new GHSA. Returns the ingested object"
  ingestGHSA(ghsa: GHSAInputSpec): GHSA!
}
