#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for recording presence of SBOMs

type HasSBOM {
  id: ID!
  "SBOM subject"
  subject: PackageOrArtifact!
  "Identifier for the SBOM document"
  uri: String!
  "Algorithm by which SBOMs digest was computed"
  algorithm: String!
  "Digest of SBOM"
  digest: String!
  "Location from which the SBOM can be downloaded"
  downloadLocation: String!
  "SBOM annotations (e.g., SBOM Scorecard information)"
  annotations: [Annotation!]!
  "Document from which this attestation is generated from"
  origin: String!
  "GUAC collector for the document"
  collector: String!
}

"""
Annotation is a key-value pair to provide additional information or metadata
about an SBOM.
"""
type Annotation {
  key: String!
  value: String!
}

"""
HasSBOMSpec allows filtering the list of HasSBOM to return.

Only the package or artifact can be added, not both.
"""
input HasSBOMSpec {
  id: ID
  subject: PackageOrArtifactSpec
  uri: String
  algorithm: String
  digest: String
  downloadLocation: String
  annotations: [AnnotationSpec!] = []
  origin: String
  collector: String
}

"AnnotationSpec allows creating query filters for Annotation objects."
input AnnotationSpec {
  key: String!
  value: String!
}

"HasSBOMInputSpec is the same as HasSBOM but for mutation input."
input HasSBOMInputSpec {
  uri: String!
  algorithm: String!
  digest: String!
  downloadLocation: String!
  annotations: [AnnotationInputSpec!]!
  origin: String!
  collector: String!
}

"AnnotationInputSpec allows ingesting Annotation objects."
input AnnotationInputSpec {
  key: String!
  value: String!
}

extend type Query {
  "Returns all SBOM certifications."
  HasSBOM(hasSBOMSpec: HasSBOMSpec): [HasSBOM!]!
}

extend type Mutation {
  "Certifies that a package or artifact has an SBOM."
  ingestHasSBOM(subject: PackageOrArtifactInput!, hasSBOM: HasSBOMInputSpec!): HasSBOM!
}
