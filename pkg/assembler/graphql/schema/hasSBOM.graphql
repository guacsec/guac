#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for the HasSBOM. It contains the subject (which can be either a package or source), uri, origin and collector.
"""
HasSBOM is an attestation represents that a package object or source object has an SBOM associated with a uri

subject - union type that can be either a package or source object type
uri (property) - identifier string for the SBOM
algorithm - cryptographic algorithm of the digest
digest - hash of the SBOM 
downloadLocation - the download location of the SBOM
annotations - this field may be used to provide additional information or metadata about SBOM. Such as SBOM scorecard information
origin (property) - where this attestation was generated from (based on which document)
collector (property) - the GUAC collector that collected the document that generated this attestation

Note: Only package object or source object can be defined. Not both.
"""
type HasSBOM {
  id: ID!
  subject: PackageOrSource!
  uri: String!
  algorithm: String!
  digest: String!
  downloadLocation: String!
  annotations: [Annotation!]!
  origin: String!
  collector: String!
}


"""
Annotation are key-value pairs to provide additional information or metadata about SBOM
"""
type Annotation {
  key: String!
  value: String!
}


"""
HasSBOMSpec allows filtering the list of HasSBOM to return.

Only the package or source can be added, not both
"""
input HasSBOMSpec {
  id: ID
  subject: PackageOrSourceSpec
  uri: String
  algorithm: String
  digest: String
  downloadLocation: String
  annotations: [AnnotationSpec!] = []
  origin: String
  collector: String
}

"""
AnnotationSpec is the same as Annotations, but usable as query input.
"""
input AnnotationSpec {
  key: String!
  value: String!
}

"""
HasSBOMInputSpec is the same as HasSBOM but for mutation input.

All fields are required.
"""
input HasSBOMInputSpec {
  uri: String!
  algorithm: String!
  digest: String!
  downloadLocation: String!
  annotations: [AnnotationInputSpec!]!
  origin: String!
  collector: String!
}

"""
AnnotationsSpec is the same as Annotations, but usable as mutation input.
"""
input AnnotationInputSpec {
  key: String!
  value: String!
}

extend type Query {
  "Returns all HasSBOM"
  HasSBOM(hasSBOMSpec: HasSBOMSpec): [HasSBOM!]!
}

extend type Mutation {
  "Certifies that a package or a source has SBOM at the URI"
  ingestHasSBOM(subject: PackageOrSourceInput!, hasSBOM: HasSBOMInputSpec!): HasSBOM!
}
