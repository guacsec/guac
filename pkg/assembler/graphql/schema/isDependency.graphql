#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for the IsDependency. It contains the package object, dependent package object
# version range of the dependent package that it applies to, justification, origin and collector.
"""
IsDependency is an attestation that represents when a package is dependent on another package

Package - the package object type that represents the package
dependentPackage - the package object type that represents the packageName (cannot be to the packageVersion)
VersionRange - string value for version range that applies to the dependent package
Justification - string value representing why the artifacts are the equal
Origin - where this attestation was generated from (based on which document)
Collector - the GUAC collector that collected the document that generated this attestation
"""
type IsDependency {
  package: Package!
  dependentPackage: Package!
  versionRange: String!
  justification: String!
  origin: String!
  collector: String!
}

"""
IsDependencySpec allows filtering the list of IsDependency to return.

Note: the package object must be defined to return its dependent packages.
Dependent Packages must represent the packageName (cannot be the packageVersion)
"""
input IsDependencySpec {
  package: PkgSpec
  dependentPackage: PkgNameSpec
  versionRange: String
  justification: String
  origin: String
  collector: String
}

"""
PkgNameSpec is used for IsDependency to input dependent packages. This is different from PkgSpec
as the IsDependency attestation should only be allowed to be made to the packageName node and not the
packageVersion node. Versions will be handled by the version_range in the IsDependency attestation node.
"""
input PkgNameSpec {
  type: String
  namespace: String
  name: String
}


extend type Query {
  "Returns all IsDependency"
  IsDependency(isDependencySpec: IsDependencySpec): [IsDependency!]!
}
