#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines a GraphQL schema for package equality

"PkgEqual is an attestation that a set of packages are similar."
type PkgEqual {
  id: ID!
  "Collection of packages that are similar"
  packages: [Package!]!
  "Justification for the claim that the packages are similar"
  justification: String!
  "Document from which this attestation is generated from"
  origin: String!
  "GUAC collector for the document"
  collector: String!
}

"""
PkgEqualSpec allows filtering the list of package equality statements to return
in a query.

Specifying just one package allows to query for all similar packages (if any
exists).
"""
input PkgEqualSpec {
  id: ID
  packages: [PkgSpec]
  justification: String
  origin: String
  collector: String
}

"PkgEqualInputSpec represents the input to certify that packages are similar."
input PkgEqualInputSpec {
  justification: String!
  origin: String!
  collector: String!
}

extend type Query {
  "Returns all package equality statements matching a filter."
  PkgEqual(pkgEqualSpec: PkgEqualSpec!): [PkgEqual!]!
}

extend type Mutation {
  "Adds a certification that two packages are similar. The returned ID can be empty string."
  ingestPkgEqual(
    pkg: PkgInputSpec!
    otherPackage: PkgInputSpec!
    pkgEqual: PkgEqualInputSpec!
  ): ID!
  "Bulk ingest mapping between packages. The returned array of IDs can be a an array of empty string."
  ingestPkgEquals(
    pkgs: [PkgInputSpec!]!
    otherPackages: [PkgInputSpec!]!
    pkgEquals: [PkgEqualInputSpec!]!
  ): [ID!]!
}
