package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"github.com/guacsec/guac/pkg/assembler/graphql/model"
)

// Cve is the resolver for the cve field.
func (r *queryResolver) Cve(ctx context.Context, cveSpec *model.CVESpec) ([]*model.Cve, error) {
	/* 	// We have different implementations, based on whether versions are
	   	// required or not (path match or just node match)
	   	fields := graphql.CollectAllFields(ctx)
	   	cveIDImplRequired := true
	   	for _, f := range fields {
	   		if f != "cveId" {
	   			cveIDImplRequired = false
	   			break
	   		}
	   	}

	   	if cveIDImplRequired {
	   		return r.Backend.Cve(ctx, cveSpec)
	   	} else {
	   		return r.Backend.CveOnlyYear(ctx, cveSpec)
	   	} */
	return r.Backend.Cve(ctx, cveSpec)
}
