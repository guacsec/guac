package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"github.com/guacsec/guac/pkg/assembler/graphql/model"
)

// Sources is the resolver for the sources field.
func (r *queryResolver) Sources(ctx context.Context, sourceSpec *model.SourceSpec) ([]*model.Source, error) {
	// fields: [type namespaces namespaces.namespace namespaces.names namespaces.names.name namespaces.names.tag namespaces.names.commit]
	fields := getPreloads(ctx)
	nameRequired := false
	namespaceRequired := false
	for _, f := range fields {
		if f == "namespaces" {
			namespaceRequired = true
		}
		if f == "namespaces.names" {
			nameRequired = true
		}
	}

	if namespaceRequired && nameRequired {
		return r.Backend.Sources(ctx, sourceSpec)
	} else if namespaceRequired {
		return r.Backend.SourcesNamespace(ctx, sourceSpec)
	} else {
		return r.Backend.SourcesType(ctx, sourceSpec)
	}
}
