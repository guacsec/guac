package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"

	"github.com/guacsec/guac/pkg/assembler/graphql/model"
	"github.com/vektah/gqlparser/v2/gqlerror"
)

// IngestSource is the resolver for the ingestSource field.
func (r *mutationResolver) IngestSource(ctx context.Context, source model.IDorSourceInput) (*model.SourceIDs, error) {
	return r.Backend.IngestSource(ctx, source)
}

// IngestSources is the resolver for the ingestSources field.
func (r *mutationResolver) IngestSources(ctx context.Context, sources []*model.IDorSourceInput) ([]*model.SourceIDs, error) {
	return r.Backend.IngestSources(ctx, sources)
}

// Sources is the resolver for the sources field.
func (r *queryResolver) Sources(ctx context.Context, sourceSpec model.SourceSpec) ([]*model.Source, error) {
	if sourceSpec.Commit != nil && sourceSpec.Tag != nil {
		if *sourceSpec.Commit != "" && *sourceSpec.Tag != "" {
			return nil, gqlerror.Errorf("Sources :: Passing both commit and tag selectors is an error")
		}
	}

	return r.Backend.Sources(ctx, &sourceSpec)
}
