package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"

	"github.com/99designs/gqlgen/graphql"
	"github.com/guacsec/guac/pkg/assembler/graphql/model"
)

// Sources is the resolver for the sources field.
func (r *queryResolver) Sources(ctx context.Context, sourceSpec *model.SourceSpec) ([]*model.Source, error) {
	fields := graphql.CollectAllFields(ctx)
	//versionsImplRequired := false
	fmt.Println(fields)
	/* for _, f := range fields {
		if f == "versions" {
			versionsImplRequired = true
			break
		}
	}

	if versionsImplRequired {
		return PackagesWithVersion(ctx, r.DB)
	} else {
		return r.Backend.Packages(ctx, pkgSpec)
	} */
	return r.Backend.Sources(ctx, sourceSpec)
}
