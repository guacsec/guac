package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.30

import (
	"context"

	"github.com/guacsec/guac/pkg/assembler/graphql/model"
)

// IngestOccurrence is the resolver for the ingestOccurrence field.
func (r *mutationResolver) IngestOccurrence(ctx context.Context, subject model.PackageOrSourceInput, artifact model.ArtifactInputSpec, occurrence model.IsOccurrenceInputSpec) (*model.IsOccurrence, error) {
	return r.Backend.IngestOccurrence(ctx, subject, artifact, occurrence)
}

// IsOccurrence is the resolver for the IsOccurrence field.
func (r *queryResolver) IsOccurrence(ctx context.Context, isOccurrenceSpec *model.IsOccurrenceSpec) ([]*model.IsOccurrence, error) {
	return r.Backend.IsOccurrence(ctx, isOccurrenceSpec)
}
