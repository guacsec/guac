package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.37

import (
	"context"

	"github.com/guacsec/guac/pkg/assembler/graphql/model"
)

// IngestPackage is the resolver for the ingestPackage field.
func (r *mutationResolver) IngestPackage(ctx context.Context, pkg model.PkgInputSpec) (string, error) {
	ingestedPackage, err := r.Backend.IngestPackage(ctx, pkg)
	if err != nil {
		return "", err
	}
	return ingestedPackage.ID, err
}

// IngestPackages is the resolver for the ingestPackages field.
func (r *mutationResolver) IngestPackages(ctx context.Context, pkgs []*model.PkgInputSpec) ([]string, error) {
	ingestedPackages, err := r.Backend.IngestPackages(ctx, pkgs)
	ingestedPackagesIDS := []string{}
	if err == nil {
		for _, Package := range ingestedPackages {
			ingestedPackagesIDS = append(ingestedPackagesIDS, Package.ID)
		}
	}
	return ingestedPackagesIDS, err
}

// Packages is the resolver for the packages field.
func (r *queryResolver) Packages(ctx context.Context, pkgSpec model.PkgSpec) ([]*model.Package, error) {
	return r.Backend.Packages(ctx, &pkgSpec)
}
