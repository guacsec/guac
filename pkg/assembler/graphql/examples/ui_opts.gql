query GetPkg ($spec: PkgSpec) {
  packages(pkgSpec: $spec){
    ...allPkgTree
  }
}

query GetSrc  ($spec: SourceSpec) {
  sources(sourceSpec: $spec){
    ...allSrcTree
  }
}

query GetArtifact ($spec: ArtifactSpec) {
  artifacts(artifactSpec: $spec){
    ...allArtifactTree
  }
}

query GetCve ($spec: CVESpec) {
    cve(cveSpec: $spec) {
        ...allCveTree
    }
}

query GetIsDepedency($spec: IsDependencySpec) {
  IsDependency(isDependencySpec: $spec){
      ...allIsDependencyTree
  }
}

query GetIsOccurrence($spec: IsOccurrenceSpec) {
  IsOccurrence(isOccurrenceSpec: $spec){
      ...allIsOccurrencesTree
  }
}

query GetHasSourceAt($spec: HasSourceAtSpec) {
  HasSourceAt(hasSourceAtSpec: $spec){
      ...allHasSourceAtTree
  }
}

query GetCertifyVuln($spec: CertifyVulnSpec) {
  CertifyVuln(certifyVulnSpec: $spec){
      ...allCertifyVulnTree
  }
}

query GetNeighbors ($nodeId: ID!) {
  neighbors(node: $nodeId) {
    __typename
    ... on Package{
      ...allPkgTree
    }
    ... on Source {
        ...allSrcTree
    }
    ... on Artifact {
        ...allArtifactTree
    }
    ... on Builder {
        ...allBuilderTree
    }
    ... on OSV {
        ...allOSVTree
    }
    ... on CVE {
        ...allCveTree
    }
    ... on GHSA {
        ...allGHSATree
    }
    ... on IsOccurrence {
        ...allIsOccurrencesTree
    }
    ... on IsDependency {
        ...allIsDependencyTree
    }
    ... on IsVulnerability {
        ...allIsVulnerabilityTree
    }
    ... on CertifyVEXStatement {
        ...allCertifyVEXStatementTree
    }
    ... on HashEqual {
        ...allHashEqualTree
    }
    ... on CertifyBad {
        ...allCertifyBadTree
    }
    ... on CertifyGood {
        ...allCertifyGoodTree
    }
    ... on CertifyBad {
        ...allCertifyBadTree
    }
    ... on PkgEqual {
        ...allPkgEqualTree
    }
    ... on CertifyScorecard {
        ...allCertifyScorecardTree
    }
    ... on CertifyVuln {
        ...allCertifyVulnTree
    }
    ... on HasSourceAt {
        ...allHasSourceAtTree
    }
    ... on HasSBOM {
        ...allHasSBOMTree
    }
    ... on HasSLSA {
        ...allHasSLSATree
    }
  }
}


query ReachQ1 {
  packages(pkgSpec: {
    type:"deb",
    namespace:"ubuntu",
    name: "dpkg",
    qualifiers: [{key:"arch", value:"amd64"}],
  }) {
    ...allPkgTree
  }
}
