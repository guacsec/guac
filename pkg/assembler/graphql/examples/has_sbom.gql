fragment allHasSBOMTree on HasSBOM {
  id
  subject {
    __typename
    ... on Package {
      id
      type
      namespaces {
        id
        namespace
        names {
          id
          name
          versions {
            id
            version
            qualifiers {
              key
              value
            }
            subpath
          }
        }
      }
    }
    ... on Artifact {
      id
      algorithm
      digest
    }
  }
  uri
  algorithm
  digest
  downloadLocation
  origin
  collector
  knownSince
}

query HasSBOMQ1 {
  HasSBOM(hasSBOMSpec: {
    includedSoftware: {}
    includedOccurrences: {}
    includedDependencies: {}
  }) {
    ...allHasSBOMTree
  }
}

query HasSBOMQ2 {
  HasSBOM(hasSBOMSpec: { 
    origin: "Demo ingestion" 
    includedSoftware: {}
    includedOccurrences: {}
    includedDependencies: {}
  }) {
    ...allHasSBOMTree
  }
}

query HasSBOMQ3 {
  HasSBOM(hasSBOMSpec: { 
    subject: { 
      package: { 
        name: "openssl" 
      } 
    } 
    includedSoftware: {}
    includedOccurrences: {}
    includedDependencies: {}
  }) {
    ...allHasSBOMTree
  }
}

query HasSBOMQ4 {
  HasSBOM(hasSBOMSpec: { 
    subject: { 
      artifact: { 
        algorithm: "sha256" 
      }
    }
    includedSoftware: {}
    includedOccurrences: {}
    includedDependencies: {}
  }) {
    ...allHasSBOMTree
  }
}

# Invalid Example Query, only one subject should be ingested, a package or an artifact
query HasSBOMQ5 {
  HasSBOM(
    hasSBOMSpec: {
      subject: {
        package: { name: "openssl" }
        artifact: { algorithm: "sha256" }
      }
      includedSoftware: {}
    	includedOccurrences: {}
    	includedDependencies: {}
    }
  ) {
    ...allHasSBOMTree
  }
}
