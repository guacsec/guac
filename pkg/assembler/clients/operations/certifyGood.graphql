#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines the GraphQL operations to ingest a CertifyGood into GUAC

mutation IngestCertifyGoodPkg(
  $pkg: IDorPkgInput!
  $pkgMatchType: MatchFlags!
  $certifyGood: CertifyGoodInputSpec!
) {
  ingestCertifyGood(
    subject: { package: $pkg }
    pkgMatchType: $pkgMatchType
    certifyGood: $certifyGood
  )
}

mutation IngestCertifyGoodSrc(
  $source: IDorSourceInput!
  $certifyGood: CertifyGoodInputSpec!
) {
  ingestCertifyGood(
    subject: { source: $source }
    pkgMatchType: { pkg: ALL_VERSIONS }
    certifyGood: $certifyGood
  )
}

mutation IngestCertifyGoodArtifact(
  $artifact: IDorArtifactInput!
  $certifyGood: CertifyGoodInputSpec!
) {
  ingestCertifyGood(
    subject: { artifact: $artifact }
    pkgMatchType: { pkg: ALL_VERSIONS }
    certifyGood: $certifyGood
  )
}

# Defines the GraphQL operations to bulk ingest a CertifyGood into GUAC

mutation IngestCertifyGoodPkgs(
  $pkgs: [IDorPkgInput!]!
  $pkgMatchType: MatchFlags!
  $certifyGoods: [CertifyGoodInputSpec!]!
) {
  ingestCertifyGoods(
    subjects: { packages: $pkgs }
    pkgMatchType: $pkgMatchType
    certifyGoods: $certifyGoods
  )
}

mutation IngestCertifyGoodSrcs(
  $sources: [IDorSourceInput!]!
  $certifyGoods: [CertifyGoodInputSpec!]!
) {
  ingestCertifyGoods(
    subjects: { sources: $sources }
    pkgMatchType: { pkg: ALL_VERSIONS }
    certifyGoods: $certifyGoods
  )
}

mutation IngestCertifyGoodArtifacts(
  $artifacts: [IDorArtifactInput!]!
  $certifyGoods: [CertifyGoodInputSpec!]!
) {
  ingestCertifyGoods(
    subjects: { artifacts: $artifacts }
    pkgMatchType: { pkg: ALL_VERSIONS }
    certifyGoods: $certifyGoods
  )
}
