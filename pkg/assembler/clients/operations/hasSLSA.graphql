#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines the GraphQL operations to ingest SLSA attestation into GUAC

mutation IngestSLSAForArtifact(
  $artifact: IDorArtifactInput!
  $materials: [IDorArtifactInput!]!
  $builder: IDorBuilderInput!
  $slsa: SLSAInputSpec!
) {
  ingestSLSA(
    subject: $artifact
    builtFrom: $materials
    builtBy: $builder
    slsa: $slsa
  )
}

# Defines the GraphQL operations to bulk ingest SLSA attestations into GUAC

mutation IngestSLSAForArtifacts(
  $artifacts: [IDorArtifactInput!]!
  $materialsList: [[IDorArtifactInput!]!]!
  $builders: [IDorBuilderInput!]!
  $slsaList: [SLSAInputSpec!]!
) {
  ingestSLSAs(
    subjects: $artifacts
    builtFromList: $materialsList
    builtByList: $builders
    slsaList: $slsaList
  )
}

# Exposes GraphQL queries to retrieve GUAC CertifyVulns

query HasSLSA($filter: HasSLSASpec!) {
  HasSLSA(hasSLSASpec: $filter) {
    ...AllHasSLSATree
  }
}

query HasSLSAList($filter: HasSLSASpec!, $after: ID, $first: Int) {
  HasSLSAList(hasSLSASpec: $filter, after: $after, first: $first) {
    totalCount
    edges {
      cursor
      node {
        ...AllHasSLSATree
      }
    }
    pageInfo {
      startCursor
      endCursor
      hasNextPage
    }
  }
}
