#
# Copyright 2023 The GUAC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This is experimental and might change in the future!

# Defines the GraphQL operations to ingest occurrence information into GUAC

mutation IngestIsOccurrencePkg(
  $pkg: IDorPkgInput!
  $artifact: IDorArtifactInput!
  $occurrence: IsOccurrenceInputSpec!
) {
  ingestOccurrence(
    subject: { package: $pkg }
    artifact: $artifact
    occurrence: $occurrence
  )
}

mutation IngestIsOccurrenceSrc(
  $source: IDorSourceInput!
  $artifact: IDorArtifactInput!
  $occurrence: IsOccurrenceInputSpec!
) {
  ingestOccurrence(
    subject: { source: $source }
    artifact: $artifact
    occurrence: $occurrence
  )
}

# Defines the GraphQL operations to bulk ingest occurrences information into GUAC

mutation IngestIsOccurrencesPkg(
  $pkgs: [IDorPkgInput!]!
  $artifacts: [IDorArtifactInput!]!
  $occurrences: [IsOccurrenceInputSpec!]!
) {
  ingestOccurrences(
    subjects: { packages: $pkgs }
    artifacts: $artifacts
    occurrences: $occurrences
  )
}

mutation IngestIsOccurrencesSrc(
  $sources: [IDorSourceInput!]!
  $artifacts: [IDorArtifactInput!]!
  $occurrences: [IsOccurrenceInputSpec!]!
) {
  ingestOccurrences(
    subjects: { sources: $sources }
    artifacts: $artifacts
    occurrences: $occurrences
  )
}

# Exposes GraphQL queries to retrieve IsOccurrences

query Occurrences($filter: IsOccurrenceSpec!) {
  IsOccurrence(isOccurrenceSpec: $filter) {
    ...AllIsOccurrencesTree
  }
}

query OccurrenceList($filter: IsOccurrenceSpec!, $after: ID, $first: Int) {
  IsOccurrenceList(isOccurrenceSpec: $filter, after: $after, first: $first) {
    totalCount
    edges {
      cursor
      node {
        ...AllIsOccurrencesTree
      }
    }
    pageInfo {
      startCursor
      endCursor
      hasNextPage
    }
  }
}

