version: "3"

services:
  neo4j:
    image: "neo4j:4.4.9-community"
    environment:
      NEO4J_AUTH: "neo4j/s3cr3t"
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4JLABS_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: on-failure

  nats:
    image: "nats:2.9.14"
    command: "--config /config/nats/js.conf -m 8222"
    ports:
      - "4222:4222"
      # monitoring port
      - "8222:8222"
    volumes:
      - ./container_files/nats:/config/nats
    restart: on-failure

  # Due to the following issues, we have another container to perform the healthcheck
  #
  # TODO(lumjjb): I attempted to do health check for neo4j as well, but
  # the service running via neo4j status is not a good indication of if
  # the service is ready for incoming requests.
  # TODO(lumjjb): no good way right now to do a healtcheck for nats-server since
  # it doesn't have utilities within it to perform the check from the container
  # itself. 
  service-health-1:
    image: "local-healthcheck"
    stdin_open: true
    tty: true
    command:
      - /bin/bash
      - -c
      - |
        echo "checking-for-services";
        until curl -I http://nats:8222 > /dev/null 2>&1; do sleep 5; done; 
        echo "nats-up";
        until curl -I http://neo4j:7474> /dev/null 2>&1; do sleep 5; done;
        echo "neo4j-up";

  guac-collectsub:
    image: "local-organic-guac"
    command: "/opt/guac/guacone csub-server"
    working_dir: /guac
    restart: on-failure
    ports:
      - "2782:2782"
    depends_on:
      service-health-1:
        condition: service_completed_successfully
    volumes:
      - ./container_files/guac:/guac

  # GUAC ingestor and oci collector are dependent on the collectsub service to be up
  service-health-2:
    image: "local-healthcheck"
    stdin_open: true
    tty: true
    command:
      - /bin/bash
      - -c
      - |
        echo "checking-for-services";
        until nc -z guac-collectsub 2782 > /dev/null 2>&1; do sleep 5; done;
        echo "guac collectsub up";
    depends_on:
      service-health-1:
        condition: service_completed_successfully


  guac-ingestor:
    image: "local-organic-guac"
    command: "/opt/guac/ingest ingest"
    working_dir: /guac
    restart: on-failure
    depends_on:
      service-health-2:
        condition: service_completed_successfully
    volumes:
      - ./container_files/guac:/guac


  oci-collector:
    image: "local-organic-guac"
    command: "/opt/guac/collector image --use-csub"
    working_dir: /guac
    restart: on-failure
    depends_on:
      service-health-2:
        condition: service_completed_successfully
    volumes:
      - ./container_files/guac:/guac
